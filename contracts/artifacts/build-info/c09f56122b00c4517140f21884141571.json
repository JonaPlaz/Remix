{
	"id": "c09f56122b00c4517140f21884141571",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/09_Admin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Admin is Ownable {\n    mapping(address => bool) whitelist;\n    mapping(address => bool) blacklist;\n\n    event Whitelisted(address _address);\n    event Blacklisted(address _address);\n\n    constructor() Ownable(msg.sender) {}\n\n    modifier checkOwner() {\n        require(owner() == msg.sender, \"Caller is not the owner\");\n        _;\n    }\n\n    function authorize(address _address) public checkOwner {\n        require(!blacklist[_address], \"already blacklist\");\n        require(!whitelist[_address], \"already whitelist\");\n        whitelist[_address] = true;\n        emit Whitelisted(_address);\n    }\n\n    // test avec onlyOwner natif de Ownable, pas besoin de modifier\n    function unauthorize(address _address) public onlyOwner {\n        require(!blacklist[_address], \"already blacklist\");\n        require(!whitelist[_address], \"already whitelist\");\n        blacklist[_address] = true;\n        emit Blacklisted(_address);\n    }\n\n    function isWhitelisted(address _address) public view returns (bool) {\n        return whitelist[_address];\n    }\n\n    function isBlacklisted(address _address) public view returns (bool) {\n        return blacklist[_address];\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/09_Admin.sol": {
				"Admin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "Whitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "authorize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "unauthorize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/09_Admin.sol\":111:1281  contract Admin is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/09_Admin.sol\":307:343  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/09_Admin.sol\":329:339  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/09_Admin.sol\":111:1281  contract Admin is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/09_Admin.sol\":111:1281  contract Admin is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/09_Admin.sol\":111:1281  contract Admin is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb6a5d7de\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xb6a5d7de\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf0b37c04\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x3af32abf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/09_Admin.sol\":1051:1162  function isWhitelisted(address _address) public view returns (bool) {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/09_Admin.sol\":462:716  function authorize(address _address) public checkOwner {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/09_Admin.sol\":790:1045  function unauthorize(address _address) public onlyOwner {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/09_Admin.sol\":1168:1279  function isBlacklisted(address _address) public view returns (bool) {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/09_Admin.sol\":1051:1162  function isWhitelisted(address _address) public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/09_Admin.sol\":1113:1117  bool */\n      0x00\n        /* \"contracts/09_Admin.sol\":1136:1145  whitelist */\n      0x01\n        /* \"contracts/09_Admin.sol\":1136:1155  whitelist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":1146:1154  _address */\n      dup4\n        /* \"contracts/09_Admin.sol\":1136:1155  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/09_Admin.sol\":1129:1155  return whitelist[_address] */\n      swap1\n      pop\n        /* \"contracts/09_Admin.sol\":1051:1162  function isWhitelisted(address _address) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/09_Admin.sol\":462:716  function authorize(address _address) public checkOwner {... */\n    tag_25:\n        /* \"contracts/09_Admin.sol\":400:410  msg.sender */\n      caller\n        /* \"contracts/09_Admin.sol\":389:410  owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/09_Admin.sol\":389:396  owner() */\n      tag_45\n        /* \"contracts/09_Admin.sol\":389:394  owner */\n      tag_20\n        /* \"contracts/09_Admin.sol\":389:396  owner() */\n      jump\t// in\n    tag_45:\n        /* \"contracts/09_Admin.sol\":389:410  owner() == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/09_Admin.sol\":381:438  require(owner() == msg.sender, \"Caller is not the owner\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/09_Admin.sol\":536:545  blacklist */\n      0x02\n        /* \"contracts/09_Admin.sol\":536:555  blacklist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":546:554  _address */\n      dup3\n        /* \"contracts/09_Admin.sol\":536:555  blacklist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/09_Admin.sol\":535:555  !blacklist[_address] */\n      iszero\n        /* \"contracts/09_Admin.sol\":527:577  require(!blacklist[_address], \"already blacklist\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"contracts/09_Admin.sol\":596:605  whitelist */\n      0x01\n        /* \"contracts/09_Admin.sol\":596:615  whitelist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":606:614  _address */\n      dup3\n        /* \"contracts/09_Admin.sol\":596:615  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/09_Admin.sol\":595:615  !whitelist[_address] */\n      iszero\n        /* \"contracts/09_Admin.sol\":587:637  require(!whitelist[_address], \"already whitelist\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/09_Admin.sol\":669:673  true */\n      0x01\n        /* \"contracts/09_Admin.sol\":647:656  whitelist */\n      dup1\n        /* \"contracts/09_Admin.sol\":647:666  whitelist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":657:665  _address */\n      dup4\n        /* \"contracts/09_Admin.sol\":647:666  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/09_Admin.sol\":647:673  whitelist[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/09_Admin.sol\":688:709  Whitelisted(_address) */\n      0xaab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54\n        /* \"contracts/09_Admin.sol\":700:708  _address */\n      dup2\n        /* \"contracts/09_Admin.sol\":688:709  Whitelisted(_address) */\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/09_Admin.sol\":462:716  function authorize(address _address) public checkOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/09_Admin.sol\":790:1045  function unauthorize(address _address) public onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/09_Admin.sol\":865:874  blacklist */\n      0x02\n        /* \"contracts/09_Admin.sol\":865:884  blacklist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":875:883  _address */\n      dup3\n        /* \"contracts/09_Admin.sol\":865:884  blacklist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/09_Admin.sol\":864:884  !blacklist[_address] */\n      iszero\n        /* \"contracts/09_Admin.sol\":856:906  require(!blacklist[_address], \"already blacklist\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_52\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/09_Admin.sol\":925:934  whitelist */\n      0x01\n        /* \"contracts/09_Admin.sol\":925:944  whitelist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":935:943  _address */\n      dup3\n        /* \"contracts/09_Admin.sol\":925:944  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/09_Admin.sol\":924:944  !whitelist[_address] */\n      iszero\n        /* \"contracts/09_Admin.sol\":916:966  require(!whitelist[_address], \"already whitelist\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_55\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"contracts/09_Admin.sol\":998:1002  true */\n      0x01\n        /* \"contracts/09_Admin.sol\":976:985  blacklist */\n      0x02\n        /* \"contracts/09_Admin.sol\":976:995  blacklist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":986:994  _address */\n      dup4\n        /* \"contracts/09_Admin.sol\":976:995  blacklist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/09_Admin.sol\":976:1002  blacklist[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/09_Admin.sol\":1017:1038  Blacklisted(_address) */\n      0xffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855\n        /* \"contracts/09_Admin.sol\":1029:1037  _address */\n      dup2\n        /* \"contracts/09_Admin.sol\":1017:1038  Blacklisted(_address) */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/09_Admin.sol\":790:1045  function unauthorize(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_68\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/09_Admin.sol\":1168:1279  function isBlacklisted(address _address) public view returns (bool) {... */\n    tag_34:\n        /* \"contracts/09_Admin.sol\":1230:1234  bool */\n      0x00\n        /* \"contracts/09_Admin.sol\":1253:1262  blacklist */\n      0x02\n        /* \"contracts/09_Admin.sol\":1253:1272  blacklist[_address] */\n      0x00\n        /* \"contracts/09_Admin.sol\":1263:1271  _address */\n      dup4\n        /* \"contracts/09_Admin.sol\":1253:1272  blacklist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/09_Admin.sol\":1246:1272  return blacklist[_address] */\n      swap1\n      pop\n        /* \"contracts/09_Admin.sol\":1168:1279  function isBlacklisted(address _address) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_76\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_82:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_84:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_85:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_104\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_84\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_86:\n        /* \"#utility.yul\":641:665   */\n      tag_106\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_85\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_107:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_87:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_109\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_86\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_112\n      tag_82\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":917:1036   */\n    tag_111:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_113\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_87\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_88:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_89:\n        /* \"#utility.yul\":1353:1374   */\n      tag_116\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_88\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_16:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_118\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_89\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_90:\n        /* \"#utility.yul\":1690:1714   */\n      tag_120\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_85\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_22:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_122\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_90\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_91:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2303   */\n    tag_92:\n        /* \"#utility.yul\":2270:2295   */\n      0x43616c6c6572206973206e6f7420746865206f776e6572000000000000000000\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2296   */\n      mstore\n        /* \"#utility.yul\":2130:2303   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2675   */\n    tag_93:\n        /* \"#utility.yul\":2451:2454   */\n      0x00\n        /* \"#utility.yul\":2472:2539   */\n      tag_126\n        /* \"#utility.yul\":2536:2538   */\n      0x17\n        /* \"#utility.yul\":2531:2534   */\n      dup4\n        /* \"#utility.yul\":2472:2539   */\n      tag_91\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2465:2539   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2641   */\n      tag_127\n        /* \"#utility.yul\":2637:2640   */\n      dup3\n        /* \"#utility.yul\":2548:2641   */\n      tag_92\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2666:2668   */\n      0x20\n        /* \"#utility.yul\":2661:2664   */\n      dup3\n        /* \"#utility.yul\":2657:2669   */\n      add\n        /* \"#utility.yul\":2650:2669   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:3100   */\n    tag_48:\n        /* \"#utility.yul\":2847:2851   */\n      0x00\n        /* \"#utility.yul\":2885:2887   */\n      0x20\n        /* \"#utility.yul\":2874:2883   */\n      dup3\n        /* \"#utility.yul\":2870:2888   */\n      add\n        /* \"#utility.yul\":2862:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2934:2943   */\n      dup2\n        /* \"#utility.yul\":2928:2932   */\n      dup2\n        /* \"#utility.yul\":2924:2944   */\n      sub\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2909:2918   */\n      dup4\n        /* \"#utility.yul\":2905:2922   */\n      add\n        /* \"#utility.yul\":2898:2945   */\n      mstore\n        /* \"#utility.yul\":2962:3093   */\n      tag_129\n        /* \"#utility.yul\":3088:3092   */\n      dup2\n        /* \"#utility.yul\":2962:3093   */\n      tag_93\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2954:3093   */\n      swap1\n      pop\n        /* \"#utility.yul\":2681:3100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3273   */\n    tag_94:\n        /* \"#utility.yul\":3246:3265   */\n      0x616c726561647920626c61636b6c697374000000000000000000000000000000\n        /* \"#utility.yul\":3242:3243   */\n      0x00\n        /* \"#utility.yul\":3234:3240   */\n      dup3\n        /* \"#utility.yul\":3230:3244   */\n      add\n        /* \"#utility.yul\":3223:3266   */\n      mstore\n        /* \"#utility.yul\":3106:3273   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3279:3645   */\n    tag_95:\n        /* \"#utility.yul\":3421:3424   */\n      0x00\n        /* \"#utility.yul\":3442:3509   */\n      tag_132\n        /* \"#utility.yul\":3506:3508   */\n      0x11\n        /* \"#utility.yul\":3501:3504   */\n      dup4\n        /* \"#utility.yul\":3442:3509   */\n      tag_91\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3435:3509   */\n      swap2\n      pop\n        /* \"#utility.yul\":3518:3611   */\n      tag_133\n        /* \"#utility.yul\":3607:3610   */\n      dup3\n        /* \"#utility.yul\":3518:3611   */\n      tag_94\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3636:3638   */\n      0x20\n        /* \"#utility.yul\":3631:3634   */\n      dup3\n        /* \"#utility.yul\":3627:3639   */\n      add\n        /* \"#utility.yul\":3620:3639   */\n      swap1\n      pop\n        /* \"#utility.yul\":3279:3645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3651:4070   */\n    tag_52:\n        /* \"#utility.yul\":3817:3821   */\n      0x00\n        /* \"#utility.yul\":3855:3857   */\n      0x20\n        /* \"#utility.yul\":3844:3853   */\n      dup3\n        /* \"#utility.yul\":3840:3858   */\n      add\n        /* \"#utility.yul\":3832:3858   */\n      swap1\n      pop\n        /* \"#utility.yul\":3904:3913   */\n      dup2\n        /* \"#utility.yul\":3898:3902   */\n      dup2\n        /* \"#utility.yul\":3894:3914   */\n      sub\n        /* \"#utility.yul\":3890:3891   */\n      0x00\n        /* \"#utility.yul\":3879:3888   */\n      dup4\n        /* \"#utility.yul\":3875:3892   */\n      add\n        /* \"#utility.yul\":3868:3915   */\n      mstore\n        /* \"#utility.yul\":3932:4063   */\n      tag_135\n        /* \"#utility.yul\":4058:4062   */\n      dup2\n        /* \"#utility.yul\":3932:4063   */\n      tag_95\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3924:4063   */\n      swap1\n      pop\n        /* \"#utility.yul\":3651:4070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4076:4243   */\n    tag_96:\n        /* \"#utility.yul\":4216:4235   */\n      0x616c72656164792077686974656c697374000000000000000000000000000000\n        /* \"#utility.yul\":4212:4213   */\n      0x00\n        /* \"#utility.yul\":4204:4210   */\n      dup3\n        /* \"#utility.yul\":4200:4214   */\n      add\n        /* \"#utility.yul\":4193:4236   */\n      mstore\n        /* \"#utility.yul\":4076:4243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4615   */\n    tag_97:\n        /* \"#utility.yul\":4391:4394   */\n      0x00\n        /* \"#utility.yul\":4412:4479   */\n      tag_138\n        /* \"#utility.yul\":4476:4478   */\n      0x11\n        /* \"#utility.yul\":4471:4474   */\n      dup4\n        /* \"#utility.yul\":4412:4479   */\n      tag_91\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4405:4479   */\n      swap2\n      pop\n        /* \"#utility.yul\":4488:4581   */\n      tag_139\n        /* \"#utility.yul\":4577:4580   */\n      dup3\n        /* \"#utility.yul\":4488:4581   */\n      tag_96\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4606:4608   */\n      0x20\n        /* \"#utility.yul\":4601:4604   */\n      dup3\n        /* \"#utility.yul\":4597:4609   */\n      add\n        /* \"#utility.yul\":4590:4609   */\n      swap1\n      pop\n        /* \"#utility.yul\":4249:4615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4621:5040   */\n    tag_55:\n        /* \"#utility.yul\":4787:4791   */\n      0x00\n        /* \"#utility.yul\":4825:4827   */\n      0x20\n        /* \"#utility.yul\":4814:4823   */\n      dup3\n        /* \"#utility.yul\":4810:4828   */\n      add\n        /* \"#utility.yul\":4802:4828   */\n      swap1\n      pop\n        /* \"#utility.yul\":4874:4883   */\n      dup2\n        /* \"#utility.yul\":4868:4872   */\n      dup2\n        /* \"#utility.yul\":4864:4884   */\n      sub\n        /* \"#utility.yul\":4860:4861   */\n      0x00\n        /* \"#utility.yul\":4849:4858   */\n      dup4\n        /* \"#utility.yul\":4845:4862   */\n      add\n        /* \"#utility.yul\":4838:4885   */\n      mstore\n        /* \"#utility.yul\":4902:5033   */\n      tag_141\n        /* \"#utility.yul\":5028:5032   */\n      dup2\n        /* \"#utility.yul\":4902:5033   */\n      tag_97\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4894:5033   */\n      swap1\n      pop\n        /* \"#utility.yul\":4621:5040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f1456fa431a816c36afe1b8ee8ccf990ce1ddcb072884df14dd4a1ad9933646064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610a30806101bc5f395ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c8063b6a5d7de11610059578063b6a5d7de146100d7578063f0b37c04146100f3578063f2fde38b1461010f578063fe575a871461012b5761007b565b80633af32abf1461007f578063715018a6146100af5780638da5cb5b146100b9575b5f5ffd5b6100996004803603810190610094919061082c565b61015b565b6040516100a69190610871565b60405180910390f35b6100b76101ad565b005b6100c16101c0565b6040516100ce9190610899565b60405180910390f35b6100f160048036038101906100ec919061082c565b6101e7565b005b61010d6004803603810190610108919061082c565b6103fe565b005b6101296004803603810190610124919061082c565b6105a9565b005b6101456004803603810190610140919061082c565b61062d565b6040516101529190610871565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6101b561067f565b6101be5f610706565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff166102066101c0565b73ffffffffffffffffffffffffffffffffffffffff161461025c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102539061090c565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd90610974565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610370576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610367906109dc565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54816040516103f39190610899565b60405180910390a150565b61040661067f565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048790610974565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561051a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610511906109dc565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8558160405161059e9190610899565b60405180910390a150565b6105b161067f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610621575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106189190610899565b60405180910390fd5b61062a81610706565b50565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6106876107c7565b73ffffffffffffffffffffffffffffffffffffffff166106a56101c0565b73ffffffffffffffffffffffffffffffffffffffff1614610704576106c86107c7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106fb9190610899565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107fb826107d2565b9050919050565b61080b816107f1565b8114610815575f5ffd5b50565b5f8135905061082681610802565b92915050565b5f60208284031215610841576108406107ce565b5b5f61084e84828501610818565b91505092915050565b5f8115159050919050565b61086b81610857565b82525050565b5f6020820190506108845f830184610862565b92915050565b610893816107f1565b82525050565b5f6020820190506108ac5f83018461088a565b92915050565b5f82825260208201905092915050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f6108f66017836108b2565b9150610901826108c2565b602082019050919050565b5f6020820190508181035f830152610923816108ea565b9050919050565b7f616c726561647920626c61636b6c6973740000000000000000000000000000005f82015250565b5f61095e6011836108b2565b91506109698261092a565b602082019050919050565b5f6020820190508181035f83015261098b81610952565b9050919050565b7f616c72656164792077686974656c6973740000000000000000000000000000005f82015250565b5f6109c66011836108b2565b91506109d182610992565b602082019050919050565b5f6020820190508181035f8301526109f3816109ba565b905091905056fea2646970667358221220f1456fa431a816c36afe1b8ee8ccf990ce1ddcb072884df14dd4a1ad9933646064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA30 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6A5D7DE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF0B37C04 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x12B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x1BE PUSH0 PUSH2 0x706 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x206 PUSH2 0x1C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DD SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x406 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x487 SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 DUP2 PUSH1 0x40 MLOAD PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5B1 PUSH2 0x67F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x621 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62A DUP2 PUSH2 0x706 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A5 PUSH2 0x1C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x704 JUMPI PUSH2 0x6C8 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FB DUP3 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x815 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x826 DUP2 PUSH2 0x802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x841 JUMPI PUSH2 0x840 PUSH2 0x7CE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x84E DUP5 DUP3 DUP6 ADD PUSH2 0x818 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86B DUP2 PUSH2 0x857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x884 PUSH0 DUP4 ADD DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x893 DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AC PUSH0 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8F6 PUSH1 0x17 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x901 DUP3 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x923 DUP2 PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920626C61636B6C697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x95E PUSH1 0x11 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x969 DUP3 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x98B DUP2 PUSH2 0x952 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C72656164792077686974656C697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9C6 PUSH1 0x11 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D1 DUP3 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9F3 DUP2 PUSH2 0x9BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL GASLIMIT PUSH16 0xA431A816C36AFE1B8EE8CCF990CE1DDC 0xB0 PUSH19 0x884DF14DD4A1AD9933646064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "111:1170:2:-:0;;;307:36;;;;;;;;;;329:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;111:1170:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;111:1170:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1663,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1991,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1798,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorize_253": {
									"entryPoint": 487,
									"id": 253,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isBlacklisted_311": {
									"entryPoint": 1581,
									"id": 311,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelisted_299": {
									"entryPoint": 347,
									"id": 299,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 448,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 429,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1449,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unauthorize_287": {
									"entryPoint": 1022,
									"id": 287,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a": {
									"entryPoint": 2450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5043:3",
										"nodeType": "YulBlock",
										"src": "0:5043:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1218:48:3",
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nativeSrc": "1228:32:3",
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nativeSrc": "1246:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nativeSrc": "1239:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:3",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:3",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nativeSrc": "1331:50:3",
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nativeSrc": "1353:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nativeSrc": "1341:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nativeSrc": "1341:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:3",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:3",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nativeSrc": "1479:118:3",
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nativeSrc": "1489:26:3",
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nativeSrc": "1497:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nativeSrc": "1572:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nativeSrc": "1525:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nativeSrc": "1525:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:3",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:3",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:3",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											},
											{
												"body": {
													"nativeSrc": "1668:53:3",
													"nodeType": "YulBlock",
													"src": "1668:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1685:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1708:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1690:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:3"
																		},
																		"nativeSrc": "1690:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1678:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:3"
																},
																"nativeSrc": "1678:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1678:37:3"
															},
															"nativeSrc": "1678:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1603:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:3",
														"nodeType": "YulTypedName",
														"src": "1656:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1663:3:3",
														"nodeType": "YulTypedName",
														"src": "1663:3:3",
														"type": ""
													}
												],
												"src": "1603:118:3"
											},
											{
												"body": {
													"nativeSrc": "1825:124:3",
													"nodeType": "YulBlock",
													"src": "1825:124:3",
													"statements": [
														{
															"nativeSrc": "1835:26:3",
															"nodeType": "YulAssignment",
															"src": "1835:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1847:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1843:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:3"
																},
																"nativeSrc": "1843:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1843:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:3"
																		},
																		"nativeSrc": "1924:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1871:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:3"
																},
																"nativeSrc": "1871:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1871:71:3"
															},
															"nativeSrc": "1871:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1727:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1797:9:3",
														"nodeType": "YulTypedName",
														"src": "1797:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1809:6:3",
														"nodeType": "YulTypedName",
														"src": "1809:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1820:4:3",
														"nodeType": "YulTypedName",
														"src": "1820:4:3",
														"type": ""
													}
												],
												"src": "1727:222:3"
											},
											{
												"body": {
													"nativeSrc": "2051:73:3",
													"nodeType": "YulBlock",
													"src": "2051:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2068:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2073:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2061:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:3"
																},
																"nativeSrc": "2061:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2061:19:3"
															},
															"nativeSrc": "2061:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:3"
														},
														{
															"nativeSrc": "2089:29:3",
															"nodeType": "YulAssignment",
															"src": "2089:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2108:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2113:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2104:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:3"
																},
																"nativeSrc": "2104:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2104:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2089:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1955:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2023:3:3",
														"nodeType": "YulTypedName",
														"src": "2023:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2028:6:3",
														"nodeType": "YulTypedName",
														"src": "2028:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2039:11:3",
														"nodeType": "YulTypedName",
														"src": "2039:11:3",
														"type": ""
													}
												],
												"src": "1955:169:3"
											},
											{
												"body": {
													"nativeSrc": "2236:67:3",
													"nodeType": "YulBlock",
													"src": "2236:67:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2258:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2266:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2254:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:3"
																		},
																		"nativeSrc": "2254:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:3"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "2270:25:3",
																		"nodeType": "YulLiteral",
																		"src": "2270:25:3",
																		"type": "",
																		"value": "Caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2247:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:3"
																},
																"nativeSrc": "2247:49:3",
																"nodeType": "YulFunctionCall",
																"src": "2247:49:3"
															},
															"nativeSrc": "2247:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "2247:49:3"
														}
													]
												},
												"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
												"nativeSrc": "2130:173:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2228:6:3",
														"nodeType": "YulTypedName",
														"src": "2228:6:3",
														"type": ""
													}
												],
												"src": "2130:173:3"
											},
											{
												"body": {
													"nativeSrc": "2455:220:3",
													"nodeType": "YulBlock",
													"src": "2455:220:3",
													"statements": [
														{
															"nativeSrc": "2465:74:3",
															"nodeType": "YulAssignment",
															"src": "2465:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2531:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2531:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2536:2:3",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2472:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2472:58:3"
																},
																"nativeSrc": "2472:67:3",
																"nodeType": "YulFunctionCall",
																"src": "2472:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2465:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2465:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2637:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2637:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																	"nativeSrc": "2548:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "2548:88:3"
																},
																"nativeSrc": "2548:93:3",
																"nodeType": "YulFunctionCall",
																"src": "2548:93:3"
															},
															"nativeSrc": "2548:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "2548:93:3"
														},
														{
															"nativeSrc": "2650:19:3",
															"nodeType": "YulAssignment",
															"src": "2650:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2661:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2657:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2657:3:3"
																},
																"nativeSrc": "2657:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2657:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2650:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2309:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2443:3:3",
														"nodeType": "YulTypedName",
														"src": "2443:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2451:3:3",
														"nodeType": "YulTypedName",
														"src": "2451:3:3",
														"type": ""
													}
												],
												"src": "2309:366:3"
											},
											{
												"body": {
													"nativeSrc": "2852:248:3",
													"nodeType": "YulBlock",
													"src": "2852:248:3",
													"statements": [
														{
															"nativeSrc": "2862:26:3",
															"nodeType": "YulAssignment",
															"src": "2862:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2874:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2874:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2885:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2885:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2870:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:3"
																},
																"nativeSrc": "2870:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2870:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2862:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2862:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2909:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2909:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2920:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2920:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2905:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:3"
																		},
																		"nativeSrc": "2905:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2928:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2928:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2934:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:3"
																		},
																		"nativeSrc": "2924:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2924:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2898:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:3"
																},
																"nativeSrc": "2898:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2898:47:3"
															},
															"nativeSrc": "2898:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2898:47:3"
														},
														{
															"nativeSrc": "2954:139:3",
															"nodeType": "YulAssignment",
															"src": "2954:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3088:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3088:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2962:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "2962:124:3"
																},
																"nativeSrc": "2962:131:3",
																"nodeType": "YulFunctionCall",
																"src": "2962:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2954:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2954:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2681:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2832:9:3",
														"nodeType": "YulTypedName",
														"src": "2832:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2847:4:3",
														"nodeType": "YulTypedName",
														"src": "2847:4:3",
														"type": ""
													}
												],
												"src": "2681:419:3"
											},
											{
												"body": {
													"nativeSrc": "3212:61:3",
													"nodeType": "YulBlock",
													"src": "3212:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3234:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3234:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3242:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3242:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3230:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3230:3:3"
																		},
																		"nativeSrc": "3230:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3230:14:3"
																	},
																	{
																		"hexValue": "616c726561647920626c61636b6c697374",
																		"kind": "string",
																		"nativeSrc": "3246:19:3",
																		"nodeType": "YulLiteral",
																		"src": "3246:19:3",
																		"type": "",
																		"value": "already blacklist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3223:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:3"
																},
																"nativeSrc": "3223:43:3",
																"nodeType": "YulFunctionCall",
																"src": "3223:43:3"
															},
															"nativeSrc": "3223:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "3223:43:3"
														}
													]
												},
												"name": "store_literal_in_memory_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0",
												"nativeSrc": "3106:167:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3204:6:3",
														"nodeType": "YulTypedName",
														"src": "3204:6:3",
														"type": ""
													}
												],
												"src": "3106:167:3"
											},
											{
												"body": {
													"nativeSrc": "3425:220:3",
													"nodeType": "YulBlock",
													"src": "3425:220:3",
													"statements": [
														{
															"nativeSrc": "3435:74:3",
															"nodeType": "YulAssignment",
															"src": "3435:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3501:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3501:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3506:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:3",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3442:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3442:58:3"
																},
																"nativeSrc": "3442:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3442:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3435:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3435:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3607:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3607:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0",
																	"nativeSrc": "3518:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3518:88:3"
																},
																"nativeSrc": "3518:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3518:93:3"
															},
															"nativeSrc": "3518:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3518:93:3"
														},
														{
															"nativeSrc": "3620:19:3",
															"nodeType": "YulAssignment",
															"src": "3620:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3631:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3631:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3636:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3636:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3627:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:3"
																},
																"nativeSrc": "3627:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3627:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3620:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3620:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3279:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3413:3:3",
														"nodeType": "YulTypedName",
														"src": "3413:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3421:3:3",
														"nodeType": "YulTypedName",
														"src": "3421:3:3",
														"type": ""
													}
												],
												"src": "3279:366:3"
											},
											{
												"body": {
													"nativeSrc": "3822:248:3",
													"nodeType": "YulBlock",
													"src": "3822:248:3",
													"statements": [
														{
															"nativeSrc": "3832:26:3",
															"nodeType": "YulAssignment",
															"src": "3832:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3844:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3844:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3855:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3855:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3840:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3840:3:3"
																},
																"nativeSrc": "3840:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3840:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3832:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3832:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3879:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3879:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3890:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3890:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3875:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3875:3:3"
																		},
																		"nativeSrc": "3875:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3875:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3898:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3898:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3904:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3904:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3894:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3894:3:3"
																		},
																		"nativeSrc": "3894:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3894:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3868:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3868:6:3"
																},
																"nativeSrc": "3868:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3868:47:3"
															},
															"nativeSrc": "3868:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3868:47:3"
														},
														{
															"nativeSrc": "3924:139:3",
															"nodeType": "YulAssignment",
															"src": "3924:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4058:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4058:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3932:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "3932:124:3"
																},
																"nativeSrc": "3932:131:3",
																"nodeType": "YulFunctionCall",
																"src": "3932:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3924:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3924:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3651:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3802:9:3",
														"nodeType": "YulTypedName",
														"src": "3802:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3817:4:3",
														"nodeType": "YulTypedName",
														"src": "3817:4:3",
														"type": ""
													}
												],
												"src": "3651:419:3"
											},
											{
												"body": {
													"nativeSrc": "4182:61:3",
													"nodeType": "YulBlock",
													"src": "4182:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4204:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4204:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4212:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4212:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4200:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:3"
																		},
																		"nativeSrc": "4200:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:14:3"
																	},
																	{
																		"hexValue": "616c72656164792077686974656c697374",
																		"kind": "string",
																		"nativeSrc": "4216:19:3",
																		"nodeType": "YulLiteral",
																		"src": "4216:19:3",
																		"type": "",
																		"value": "already whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4193:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:3"
																},
																"nativeSrc": "4193:43:3",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:3"
															},
															"nativeSrc": "4193:43:3",
															"nodeType": "YulExpressionStatement",
															"src": "4193:43:3"
														}
													]
												},
												"name": "store_literal_in_memory_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a",
												"nativeSrc": "4076:167:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4174:6:3",
														"nodeType": "YulTypedName",
														"src": "4174:6:3",
														"type": ""
													}
												],
												"src": "4076:167:3"
											},
											{
												"body": {
													"nativeSrc": "4395:220:3",
													"nodeType": "YulBlock",
													"src": "4395:220:3",
													"statements": [
														{
															"nativeSrc": "4405:74:3",
															"nodeType": "YulAssignment",
															"src": "4405:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4471:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4471:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4476:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4476:2:3",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4412:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4412:58:3"
																},
																"nativeSrc": "4412:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4412:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4405:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4405:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4577:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4577:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a",
																	"nativeSrc": "4488:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4488:88:3"
																},
																"nativeSrc": "4488:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4488:93:3"
															},
															"nativeSrc": "4488:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4488:93:3"
														},
														{
															"nativeSrc": "4590:19:3",
															"nodeType": "YulAssignment",
															"src": "4590:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4601:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4601:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4606:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4606:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4597:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4597:3:3"
																},
																"nativeSrc": "4597:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4597:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4590:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4590:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4249:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4383:3:3",
														"nodeType": "YulTypedName",
														"src": "4383:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4391:3:3",
														"nodeType": "YulTypedName",
														"src": "4391:3:3",
														"type": ""
													}
												],
												"src": "4249:366:3"
											},
											{
												"body": {
													"nativeSrc": "4792:248:3",
													"nodeType": "YulBlock",
													"src": "4792:248:3",
													"statements": [
														{
															"nativeSrc": "4802:26:3",
															"nodeType": "YulAssignment",
															"src": "4802:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4814:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4814:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4825:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4825:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4810:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4810:3:3"
																},
																"nativeSrc": "4810:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4810:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4802:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4802:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4849:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4849:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4860:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4860:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4845:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:3"
																		},
																		"nativeSrc": "4845:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4845:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4868:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4868:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4874:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4864:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:3"
																		},
																		"nativeSrc": "4864:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4864:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4838:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4838:6:3"
																},
																"nativeSrc": "4838:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4838:47:3"
															},
															"nativeSrc": "4838:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4838:47:3"
														},
														{
															"nativeSrc": "4894:139:3",
															"nodeType": "YulAssignment",
															"src": "4894:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5028:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5028:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4902:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4902:124:3"
																},
																"nativeSrc": "4902:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4902:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4894:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4894:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4621:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4772:9:3",
														"nodeType": "YulTypedName",
														"src": "4772:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4787:4:3",
														"nodeType": "YulTypedName",
														"src": "4787:4:3",
														"type": ""
													}
												],
												"src": "4621:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0(memPtr) {\n\n        mstore(add(memPtr, 0), \"already blacklist\")\n\n    }\n\n    function abi_encode_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a(memPtr) {\n\n        mstore(add(memPtr, 0), \"already whitelist\")\n\n    }\n\n    function abi_encode_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061007b575f3560e01c8063b6a5d7de11610059578063b6a5d7de146100d7578063f0b37c04146100f3578063f2fde38b1461010f578063fe575a871461012b5761007b565b80633af32abf1461007f578063715018a6146100af5780638da5cb5b146100b9575b5f5ffd5b6100996004803603810190610094919061082c565b61015b565b6040516100a69190610871565b60405180910390f35b6100b76101ad565b005b6100c16101c0565b6040516100ce9190610899565b60405180910390f35b6100f160048036038101906100ec919061082c565b6101e7565b005b61010d6004803603810190610108919061082c565b6103fe565b005b6101296004803603810190610124919061082c565b6105a9565b005b6101456004803603810190610140919061082c565b61062d565b6040516101529190610871565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6101b561067f565b6101be5f610706565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff166102066101c0565b73ffffffffffffffffffffffffffffffffffffffff161461025c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102539061090c565b60405180910390fd5b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd90610974565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610370576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610367906109dc565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54816040516103f39190610899565b60405180910390a150565b61040661067f565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048790610974565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561051a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610511906109dc565b60405180910390fd5b600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8558160405161059e9190610899565b60405180910390a150565b6105b161067f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610621575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106189190610899565b60405180910390fd5b61062a81610706565b50565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b6106876107c7565b73ffffffffffffffffffffffffffffffffffffffff166106a56101c0565b73ffffffffffffffffffffffffffffffffffffffff1614610704576106c86107c7565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106fb9190610899565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107fb826107d2565b9050919050565b61080b816107f1565b8114610815575f5ffd5b50565b5f8135905061082681610802565b92915050565b5f60208284031215610841576108406107ce565b5b5f61084e84828501610818565b91505092915050565b5f8115159050919050565b61086b81610857565b82525050565b5f6020820190506108845f830184610862565b92915050565b610893816107f1565b82525050565b5f6020820190506108ac5f83018461088a565b92915050565b5f82825260208201905092915050565b7f43616c6c6572206973206e6f7420746865206f776e65720000000000000000005f82015250565b5f6108f66017836108b2565b9150610901826108c2565b602082019050919050565b5f6020820190508181035f830152610923816108ea565b9050919050565b7f616c726561647920626c61636b6c6973740000000000000000000000000000005f82015250565b5f61095e6011836108b2565b91506109698261092a565b602082019050919050565b5f6020820190508181035f83015261098b81610952565b9050919050565b7f616c72656164792077686974656c6973740000000000000000000000000000005f82015250565b5f6109c66011836108b2565b91506109d182610992565b602082019050919050565b5f6020820190508181035f8301526109f3816109ba565b905091905056fea2646970667358221220f1456fa431a816c36afe1b8ee8ccf990ce1ddcb072884df14dd4a1ad9933646064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB6A5D7DE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF0B37C04 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x12B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x15B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x1BE PUSH0 PUSH2 0x706 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x206 PUSH2 0x1C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DD SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x370 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x406 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x487 SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x511 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 DUP2 PUSH1 0x40 MLOAD PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5B1 PUSH2 0x67F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x621 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62A DUP2 PUSH2 0x706 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x7C7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A5 PUSH2 0x1C0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x704 JUMPI PUSH2 0x6C8 PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7FB DUP3 PUSH2 0x7D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x815 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x826 DUP2 PUSH2 0x802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x841 JUMPI PUSH2 0x840 PUSH2 0x7CE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x84E DUP5 DUP3 DUP6 ADD PUSH2 0x818 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86B DUP2 PUSH2 0x857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x884 PUSH0 DUP4 ADD DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x893 DUP2 PUSH2 0x7F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AC PUSH0 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420746865206F776E6572000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8F6 PUSH1 0x17 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x901 DUP3 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x923 DUP2 PUSH2 0x8EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920626C61636B6C697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x95E PUSH1 0x11 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x969 DUP3 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x98B DUP2 PUSH2 0x952 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C72656164792077686974656C697374000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9C6 PUSH1 0x11 DUP4 PUSH2 0x8B2 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D1 DUP3 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9F3 DUP2 PUSH2 0x9BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL GASLIMIT PUSH16 0xA431A816C36AFE1B8EE8CCF990CE1DDC 0xB0 PUSH19 0x884DF14DD4A1AD9933646064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "111:1170:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462:254:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;790:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1168:111:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1051;1113:4;1136:9;:19;1146:8;1136:19;;;;;;;;;;;;;;;;;;;;;;;;;1129:26;;1051:111;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;462:254:2:-;400:10;389:21;;:7;:5;:7::i;:::-;:21;;;381:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;536:9:::1;:19;546:8;536:19;;;;;;;;;;;;;;;;;;;;;;;;;535:20;527:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;596:9;:19;606:8;596:19;;;;;;;;;;;;;;;;;;;;;;;;;595:20;587:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;669:4;647:9:::0;:19:::1;657:8;647:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;688:21;700:8;688:21;;;;;;:::i;:::-;;;;;;;;462:254:::0;:::o;790:255::-;1531:13:0;:11;:13::i;:::-;865:9:2::1;:19;875:8;865:19;;;;;;;;;;;;;;;;;;;;;;;;;864:20;856:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;925:9;:19;935:8;925:19;;;;;;;;;;;;;;;;;;;;;;;;;924:20;916:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;998:4;976:9;:19;986:8;976:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1017:21;1029:8;1017:21;;;;;;:::i;:::-;;;;;;;;790:255:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1168:111:2:-;1230:4;1253:9;:19;1263:8;1253:19;;;;;;;;;;;;;;;;;;;;;;;;;1246:26;;1168:111;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:173::-;2270:25;2266:1;2258:6;2254:14;2247:49;2130:173;:::o;2309:366::-;2451:3;2472:67;2536:2;2531:3;2472:67;:::i;:::-;2465:74;;2548:93;2637:3;2548:93;:::i;:::-;2666:2;2661:3;2657:12;2650:19;;2309:366;;;:::o;2681:419::-;2847:4;2885:2;2874:9;2870:18;2862:26;;2934:9;2928:4;2924:20;2920:1;2909:9;2905:17;2898:47;2962:131;3088:4;2962:131;:::i;:::-;2954:139;;2681:419;;;:::o;3106:167::-;3246:19;3242:1;3234:6;3230:14;3223:43;3106:167;:::o;3279:366::-;3421:3;3442:67;3506:2;3501:3;3442:67;:::i;:::-;3435:74;;3518:93;3607:3;3518:93;:::i;:::-;3636:2;3631:3;3627:12;3620:19;;3279:366;;;:::o;3651:419::-;3817:4;3855:2;3844:9;3840:18;3832:26;;3904:9;3898:4;3894:20;3890:1;3879:9;3875:17;3868:47;3932:131;4058:4;3932:131;:::i;:::-;3924:139;;3651:419;;;:::o;4076:167::-;4216:19;4212:1;4204:6;4200:14;4193:43;4076:167;:::o;4249:366::-;4391:3;4412:67;4476:2;4471:3;4412:67;:::i;:::-;4405:74;;4488:93;4577:3;4488:93;:::i;:::-;4606:2;4601:3;4597:12;4590:19;;4249:366;;;:::o;4621:419::-;4787:4;4825:2;4814:9;4810:18;4802:26;;4874:9;4868:4;4864:20;4860:1;4849:9;4845:17;4838:47;4902:131;5028:4;4902:131;:::i;:::-;4894:139;;4621:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "521600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"authorize(address)": "infinite",
								"isBlacklisted(address)": "2936",
								"isWhitelisted(address)": "2871",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unauthorize(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 1281,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 307,
									"end": 343,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 307,
									"end": 343,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 307,
									"end": 343,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 307,
									"end": 343,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 343,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 307,
									"end": 343,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 343,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 307,
									"end": 343,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 307,
									"end": 343,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 307,
									"end": 343,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 307,
									"end": 343,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 329,
									"end": 339,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 1281,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1456fa431a816c36afe1b8ee8ccf990ce1ddcb072884df14dd4a1ad9933646064736f6c634300081c0033",
									".code": [
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "B6A5D7DE"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "B6A5D7DE"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "F0B37C04"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "FE575A87"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "3AF32ABF"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1051,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1051,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1051,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 462,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 462,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 462,
											"end": 716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 462,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 462,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 462,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 790,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 790,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1168,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1168,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1168,
											"end": 1279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1154,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 716,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 462,
											"end": 716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 400,
											"end": 410,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 389,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 389,
											"end": 410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 389,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 389,
											"end": 396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 396,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 389,
											"end": 410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 389,
											"end": 410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 410,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 381,
											"end": 438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 381,
											"end": 438,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 381,
											"end": 438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 536,
											"end": 545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 554,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 536,
											"end": 555,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 535,
											"end": 555,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 527,
											"end": 577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 527,
											"end": 577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 596,
											"end": 605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 614,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 596,
											"end": 615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 595,
											"end": 615,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 587,
											"end": 637,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 587,
											"end": 637,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 669,
											"end": 673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 647,
											"end": 656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 665,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 647,
											"end": 666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 647,
											"end": 673,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "AAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54"
										},
										{
											"begin": 700,
											"end": 708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 688,
											"end": 709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 688,
											"end": 709,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 462,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 865,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 875,
											"end": 883,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 865,
											"end": 884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 864,
											"end": 884,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 856,
											"end": 906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 856,
											"end": 906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 925,
											"end": 934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 943,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 925,
											"end": 944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 924,
											"end": 944,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 916,
											"end": 966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 916,
											"end": 966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 976,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 994,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 976,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 976,
											"end": 1002,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855"
										},
										{
											"begin": 1029,
											"end": 1037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1017,
											"end": 1038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1017,
											"end": 1038,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 790,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1271,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1253,
											"end": 1272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2295,
											"name": "PUSH",
											"source": 3,
											"value": "43616C6C6572206973206E6F7420746865206F776E6572000000000000000000"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2296,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2531,
											"end": 2534,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2472,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2548,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2664,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2657,
											"end": 2669,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2309,
											"end": 2675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2945,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2962,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2681,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3273,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3106,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3246,
											"end": 3265,
											"name": "PUSH",
											"source": 3,
											"value": "616C726561647920626C61636B6C697374000000000000000000000000000000"
										},
										{
											"begin": 3242,
											"end": 3243,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3234,
											"end": 3240,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3645,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3279,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3501,
											"end": 3504,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3442,
											"end": 3509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3509,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3442,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3435,
											"end": 3509,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3435,
											"end": 3509,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3518,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3611,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3518,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3639,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3620,
											"end": 3639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3620,
											"end": 3639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3645,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 4070,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3651,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 3821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3914,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3888,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3932,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4058,
											"end": 4062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3932,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3932,
											"end": 4063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3932,
											"end": 4063,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3932,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3924,
											"end": 4063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3924,
											"end": 4063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 4070,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 4070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 4070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 4070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4243,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4076,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4216,
											"end": 4235,
											"name": "PUSH",
											"source": 3,
											"value": "616C72656164792077686974656C697374000000000000000000000000000000"
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4210,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4236,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4615,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4249,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4471,
											"end": 4474,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4412,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4412,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4405,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4488,
											"end": 4581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4581,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4488,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4601,
											"end": 4604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4609,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4615,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 5040,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4621,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4823,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4810,
											"end": 4828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4802,
											"end": 4828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4864,
											"end": 4884,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4862,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5028,
											"end": 5032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4902,
											"end": 5033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 5033,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4902,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 5033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 5040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 5040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 5040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 5040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/09_Admin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authorize(address)": "b6a5d7de",
							"isBlacklisted(address)": "fe575a87",
							"isWhitelisted(address)": "3af32abf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unauthorize(address)": "f0b37c04"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/09_Admin.sol\":\"Admin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/09_Admin.sol\":{\"keccak256\":\"0x9c7d22f9a3bbcc7f4db80fff82eb63c9eeb2a985a4a3ca64601cca0d7ac26bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://646b5ccce982f85b29af4d03245bdc692072a54cc7f1b246ff186184e1de9334\",\"dweb:/ipfs/QmNfbXo9p1JX7v3srLwsRTnVd43B1kGLiwbwJRHn3wds68\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/09_Admin.sol:Admin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 186,
								"contract": "contracts/09_Admin.sol:Admin",
								"label": "whitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 190,
								"contract": "contracts/09_Admin.sol:Admin",
								"label": "blacklist",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/09_Admin.sol": {
				"ast": {
					"absolutePath": "contracts/09_Admin.sol",
					"exportedSymbols": {
						"Admin": [
							312
						],
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 313,
							"sourceUnit": 148,
							"src": "57:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"129:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "129:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "129:7:2"
								}
							],
							"canonicalName": "Admin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 312,
							"linearizedBaseContracts": [
								312,
								147,
								177
							],
							"name": "Admin",
							"nameLocation": "120:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "168:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 312,
									"src": "143:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 183,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "151:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "143:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 184,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "162:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "blacklist",
									"nameLocation": "208:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 312,
									"src": "183:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 189,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 187,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "191:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "183:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "202:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "aab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54",
									"id": 194,
									"name": "Whitelisted",
									"nameLocation": "230:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"indexed": false,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "250:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "242:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "241:18:2"
									},
									"src": "224:36:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855",
									"id": 198,
									"name": "Blacklisted",
									"nameLocation": "271:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": false,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "291:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "283:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:18:2"
									},
									"src": "265:36:2"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "341:2:2",
										"statements": []
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 201,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "329:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "333:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "329:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 203,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 200,
												"name": "Ownable",
												"nameLocations": [
													"321:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "321:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "321:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:0:2"
									},
									"scope": 312,
									"src": "307:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "371:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 209,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "389:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "389:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 211,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "400:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "404:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "400:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "389:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "412:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															},
															"value": "Caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
																"typeString": "literal_string \"Caller is not the owner\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "381:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "381:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "381:57:2"
											},
											{
												"id": 217,
												"nodeType": "PlaceholderStatement",
												"src": "448:1:2"
											}
										]
									},
									"id": 219,
									"name": "checkOwner",
									"nameLocation": "358:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "368:2:2"
									},
									"src": "349:107:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "517:199:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "535:20:2",
															"subExpression": {
																"baseExpression": {
																	"id": 227,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "536:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 229,
																"indexExpression": {
																	"id": 228,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "546:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "536:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920626c61636b6c697374",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "557:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0",
																"typeString": "literal_string \"already blacklist\""
															},
															"value": "already blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0",
																"typeString": "literal_string \"already blacklist\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "527:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "527:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "527:50:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "595:20:2",
															"subExpression": {
																"baseExpression": {
																	"id": 235,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "596:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 237,
																"indexExpression": {
																	"id": 236,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "606:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "596:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c72656164792077686974656c697374",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "617:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a",
																"typeString": "literal_string \"already whitelist\""
															},
															"value": "already whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a",
																"typeString": "literal_string \"already whitelist\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "587:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "587:50:2"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 242,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "647:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 244,
														"indexExpression": {
															"id": 243,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "657:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "647:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "669:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "647:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "647:26:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "700:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "Whitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "688:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "EmitStatement",
												"src": "683:26:2"
											}
										]
									},
									"functionSelector": "b6a5d7de",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 223,
												"name": "checkOwner",
												"nameLocations": [
													"506:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 219,
												"src": "506:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "506:10:2"
										}
									],
									"name": "authorize",
									"nameLocation": "471:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "489:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "481:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:18:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:2"
									},
									"scope": 312,
									"src": "462:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "846:199:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "864:20:2",
															"subExpression": {
																"baseExpression": {
																	"id": 261,
																	"name": "blacklist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "865:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 263,
																"indexExpression": {
																	"id": 262,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "875:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "865:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920626c61636b6c697374",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "886:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0",
																"typeString": "literal_string \"already blacklist\""
															},
															"value": "already blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25fcf00fcd07bb6fa433a37373a9e7b303665ac4ffdbf631361b51e12e91bba0",
																"typeString": "literal_string \"already blacklist\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "856:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "856:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "856:50:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "924:20:2",
															"subExpression": {
																"baseExpression": {
																	"id": 269,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "925:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 271,
																"indexExpression": {
																	"id": 270,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "935:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "925:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c72656164792077686974656c697374",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "946:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a",
																"typeString": "literal_string \"already whitelist\""
															},
															"value": "already whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01282117f20b2dc5c6819f79ae9668f7fb2ad2fbcd1a7e1484dc50249e58711a",
																"typeString": "literal_string \"already whitelist\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "916:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "916:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "916:50:2"
											},
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 276,
															"name": "blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "976:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 278,
														"indexExpression": {
															"id": 277,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "986:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "976:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "998:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "976:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "976:26:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 283,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1029:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 282,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "1017:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1017:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "EmitStatement",
												"src": "1012:26:2"
											}
										]
									},
									"functionSelector": "f0b37c04",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 257,
												"name": "onlyOwner",
												"nameLocations": [
													"836:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "836:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "836:9:2"
										}
									],
									"name": "unauthorize",
									"nameLocation": "799:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "819:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "811:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:18:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:2"
									},
									"scope": 312,
									"src": "790:255:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1119:43:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 294,
														"name": "whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1136:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 296,
													"indexExpression": {
														"id": 295,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1146:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1136:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 297,
												"nodeType": "Return",
												"src": "1129:26:2"
											}
										]
									},
									"functionSelector": "3af32abf",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "1060:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1082:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1074:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:18:2"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1113:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1113:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:6:2"
									},
									"scope": 312,
									"src": "1051:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1236:43:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 306,
														"name": "blacklist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1253:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 308,
													"indexExpression": {
														"id": 307,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "1263:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1253:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 305,
												"id": 309,
												"nodeType": "Return",
												"src": "1246:26:2"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "1177:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1199:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1191:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:18:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1230:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1230:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:6:2"
									},
									"scope": 312,
									"src": "1168:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 313,
							"src": "111:1170:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								194,
								198
							]
						}
					],
					"src": "32:1250:2"
				},
				"id": 2
			}
		}
	}
}