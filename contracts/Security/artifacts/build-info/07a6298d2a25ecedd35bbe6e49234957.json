{
	"id": "07a6298d2a25ecedd35bbe6e49234957",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Security/36_forceFeeding.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.28;\n\n// The owner can deposit 1 ETH whenever he wants.\n// He can only withdraw when the deposited amount reaches 10 ETH.\ncontract Bank {\n    address owner;\n\n    // Set msg.sender as owner\n    constructor() {\n        owner = msg.sender;\n    }\n\n    // Deposit 1 ETH in the smart contract\n    function deposit() public payable {\n        require(msg.sender == owner);\n        require(msg.value == 1 ether);\n        require(address(this).balance <= 10 ether);\n    }\n\n    // Withdraw the entire smart contract balance\n    function withdrawAll() public {\n        require(msg.sender == owner);\n        require(address(this).balance >= 10 ether);\n        (bool succes, ) = owner.call{value: address(this).balance}(\"\");\n        require(succes);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Security/36_forceFeeding.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Security/36_forceFeeding.sol\":177:798  contract Bank {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Security/36_forceFeeding.sol\":248:297  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/Security/36_forceFeeding.sol\":280:290  msg.sender */\n  caller\n    /* \"contracts/Security/36_forceFeeding.sol\":272:277  owner */\n  0x00\n  0x00\n    /* \"contracts/Security/36_forceFeeding.sol\":272:290  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Security/36_forceFeeding.sol\":177:798  contract Bank {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Security/36_forceFeeding.sol\":177:798  contract Bank {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x853828b6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/Security/36_forceFeeding.sol\":572:796  function withdrawAll() public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      revert(0x00, 0x00)\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/Security/36_forceFeeding.sol\":346:516  function deposit() public payable {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Security/36_forceFeeding.sol\":572:796  function withdrawAll() public {... */\n    tag_6:\n        /* \"contracts/Security/36_forceFeeding.sol\":634:639  owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/36_forceFeeding.sol\":620:639  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/36_forceFeeding.sol\":620:630  msg.sender */\n      caller\n        /* \"contracts/Security/36_forceFeeding.sol\":620:639  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Security/36_forceFeeding.sol\":612:640  require(msg.sender == owner) */\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_10:\n        /* \"contracts/Security/36_forceFeeding.sol\":683:691  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/Security/36_forceFeeding.sol\":658:679  address(this).balance */\n      selfbalance\n        /* \"contracts/Security/36_forceFeeding.sol\":658:691  address(this).balance >= 10 ether */\n      lt\n      iszero\n        /* \"contracts/Security/36_forceFeeding.sol\":650:692  require(address(this).balance >= 10 ether) */\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_11:\n        /* \"contracts/Security/36_forceFeeding.sol\":703:714  bool succes */\n      0x00\n        /* \"contracts/Security/36_forceFeeding.sol\":720:725  owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/36_forceFeeding.sol\":720:730  owner.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/36_forceFeeding.sol\":738:759  address(this).balance */\n      selfbalance\n        /* \"contracts/Security/36_forceFeeding.sol\":720:764  owner.call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_16\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_15)\n    tag_16:\n      0x60\n      swap2\n      pop\n    tag_15:\n      pop\n        /* \"contracts/Security/36_forceFeeding.sol\":702:764  (bool succes, ) = owner.call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Security/36_forceFeeding.sol\":782:788  succes */\n      dup1\n        /* \"contracts/Security/36_forceFeeding.sol\":774:789  require(succes) */\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_17:\n        /* \"contracts/Security/36_forceFeeding.sol\":602:796  {... */\n      pop\n        /* \"contracts/Security/36_forceFeeding.sol\":572:796  function withdrawAll() public {... */\n      jump\t// out\n        /* \"contracts/Security/36_forceFeeding.sol\":346:516  function deposit() public payable {... */\n    tag_8:\n        /* \"contracts/Security/36_forceFeeding.sol\":412:417  owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/36_forceFeeding.sol\":398:417  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/36_forceFeeding.sol\":398:408  msg.sender */\n      caller\n        /* \"contracts/Security/36_forceFeeding.sol\":398:417  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Security/36_forceFeeding.sol\":390:418  require(msg.sender == owner) */\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n        /* \"contracts/Security/36_forceFeeding.sol\":449:456  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Security/36_forceFeeding.sol\":436:445  msg.value */\n      callvalue\n        /* \"contracts/Security/36_forceFeeding.sol\":436:456  msg.value == 1 ether */\n      eq\n        /* \"contracts/Security/36_forceFeeding.sol\":428:457  require(msg.value == 1 ether) */\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n        /* \"contracts/Security/36_forceFeeding.sol\":500:508  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/Security/36_forceFeeding.sol\":475:496  address(this).balance */\n      selfbalance\n        /* \"contracts/Security/36_forceFeeding.sol\":475:508  address(this).balance <= 10 ether */\n      gt\n      iszero\n        /* \"contracts/Security/36_forceFeeding.sol\":467:509  require(address(this).balance <= 10 ether) */\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n        /* \"contracts/Security/36_forceFeeding.sol\":346:516  function deposit() public payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:154   */\n    tag_22:\n        /* \"#utility.yul\":108:119   */\n      0x00\n        /* \"#utility.yul\":145:148   */\n      dup2\n        /* \"#utility.yul\":130:148   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":160:274   */\n    tag_23:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":280:678   */\n    tag_24:\n        /* \"#utility.yul\":439:442   */\n      0x00\n        /* \"#utility.yul\":460:543   */\n      tag_29\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":536:539   */\n      dup4\n        /* \"#utility.yul\":460:543   */\n      tag_22\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":453:543   */\n      swap2\n      pop\n        /* \"#utility.yul\":552:645   */\n      tag_30\n        /* \"#utility.yul\":641:644   */\n      dup3\n        /* \"#utility.yul\":552:645   */\n      tag_23\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":670:671   */\n      0x00\n        /* \"#utility.yul\":665:668   */\n      dup3\n        /* \"#utility.yul\":661:672   */\n      add\n        /* \"#utility.yul\":654:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":280:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:1063   */\n    tag_13:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":890:1037   */\n      tag_32\n        /* \"#utility.yul\":1033:1036   */\n      dup3\n        /* \"#utility.yul\":890:1037   */\n      tag_24\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":883:1037   */\n      swap2\n      pop\n        /* \"#utility.yul\":1054:1057   */\n      dup2\n        /* \"#utility.yul\":1047:1057   */\n      swap1\n      pop\n        /* \"#utility.yul\":684:1063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ae909e3c1863454a998a1119258dcd788c80b87264f7caa3133fed431faa23db64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102428061005b5f395ff3fe608060405260043610610028575f3560e01c8063853828b61461002c578063d0e30db014610042575b5f5ffd5b348015610037575f5ffd5b5061004061004c565b005b61004a61014b565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100a3575f5ffd5b678ac7230489e800004710156100b7575f5ffd5b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516100fc906101f8565b5f6040518083038185875af1925050503d805f8114610136576040519150601f19603f3d011682016040523d82523d5f602084013e61013b565b606091505b5050905080610148575f5ffd5b50565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a2575f5ffd5b670de0b6b3a764000034146101b5575f5ffd5b678ac7230489e800004711156101c9575f5ffd5b565b5f81905092915050565b50565b5f6101e35f836101cb565b91506101ee826101d5565b5f82019050919050565b5f610202826101d8565b915081905091905056fea2646970667358221220ae909e3c1863454a998a1119258dcd788c80b87264f7caa3133fed431faa23db64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x242 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x14B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 SELFBALANCE LT ISZERO PUSH2 0xB7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFC SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x148 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH2 0x1B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 SELFBALANCE GT ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3 PUSH0 DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE DUP3 PUSH2 0x1D5 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x202 DUP3 PUSH2 0x1D8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE SWAP1 SWAP15 EXTCODECOPY XOR PUSH4 0x454A998A GT NOT 0x25 DUP14 0xCD PUSH25 0x8C80B87264F7CAA3133FED431FAA23DB64736F6C634300081C STOP CALLER ",
							"sourceMap": "177:621:0:-:0;;;248:49;;;;;;;;;;280:10;272:5;;:18;;;;;;;;;;;;;;;;;;177:621;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_40": {
									"entryPoint": 331,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAll_78": {
									"entryPoint": 76,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1066:1",
										"nodeType": "YulBlock",
										"src": "0:1066:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "120:34:1",
													"nodeType": "YulBlock",
													"src": "120:34:1",
													"statements": [
														{
															"nativeSrc": "130:18:1",
															"nodeType": "YulAssignment",
															"src": "130:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "145:3:1",
																"nodeType": "YulIdentifier",
																"src": "145:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "130:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "130:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "92:3:1",
														"nodeType": "YulTypedName",
														"src": "92:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "97:6:1",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "108:11:1",
														"nodeType": "YulTypedName",
														"src": "108:11:1",
														"type": ""
													}
												],
												"src": "7:147:1"
											},
											{
												"body": {
													"nativeSrc": "266:8:1",
													"nodeType": "YulBlock",
													"src": "266:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "160:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "258:6:1",
														"nodeType": "YulTypedName",
														"src": "258:6:1",
														"type": ""
													}
												],
												"src": "160:114:1"
											},
											{
												"body": {
													"nativeSrc": "443:235:1",
													"nodeType": "YulBlock",
													"src": "443:235:1",
													"statements": [
														{
															"nativeSrc": "453:90:1",
															"nodeType": "YulAssignment",
															"src": "453:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "536:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "536:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "541:1:1",
																		"nodeType": "YulLiteral",
																		"src": "541:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "460:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "460:75:1"
																},
																"nativeSrc": "460:83:1",
																"nodeType": "YulFunctionCall",
																"src": "460:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "453:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "453:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "641:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "552:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "552:88:1"
																},
																"nativeSrc": "552:93:1",
																"nodeType": "YulFunctionCall",
																"src": "552:93:1"
															},
															"nativeSrc": "552:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "552:93:1"
														},
														{
															"nativeSrc": "654:18:1",
															"nodeType": "YulAssignment",
															"src": "654:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "665:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "665:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:1:1",
																		"nodeType": "YulLiteral",
																		"src": "670:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "661:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:1"
																},
																"nativeSrc": "661:11:1",
																"nodeType": "YulFunctionCall",
																"src": "661:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "280:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "431:3:1",
														"nodeType": "YulTypedName",
														"src": "431:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "439:3:1",
														"nodeType": "YulTypedName",
														"src": "439:3:1",
														"type": ""
													}
												],
												"src": "280:398:1"
											},
											{
												"body": {
													"nativeSrc": "872:191:1",
													"nodeType": "YulBlock",
													"src": "872:191:1",
													"statements": [
														{
															"nativeSrc": "883:154:1",
															"nodeType": "YulAssignment",
															"src": "883:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1033:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1033:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "890:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:141:1"
																},
																"nativeSrc": "890:147:1",
																"nodeType": "YulFunctionCall",
																"src": "890:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:1"
																}
															]
														},
														{
															"nativeSrc": "1047:10:1",
															"nodeType": "YulAssignment",
															"src": "1047:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1054:3:1",
																"nodeType": "YulIdentifier",
																"src": "1054:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1047:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "684:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "859:3:1",
														"nodeType": "YulTypedName",
														"src": "859:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "868:3:1",
														"nodeType": "YulTypedName",
														"src": "868:3:1",
														"type": ""
													}
												],
												"src": "684:379:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610028575f3560e01c8063853828b61461002c578063d0e30db014610042575b5f5ffd5b348015610037575f5ffd5b5061004061004c565b005b61004a61014b565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100a3575f5ffd5b678ac7230489e800004710156100b7575f5ffd5b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516100fc906101f8565b5f6040518083038185875af1925050503d805f8114610136576040519150601f19603f3d011682016040523d82523d5f602084013e61013b565b606091505b5050905080610148575f5ffd5b50565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a2575f5ffd5b670de0b6b3a764000034146101b5575f5ffd5b678ac7230489e800004711156101c9575f5ffd5b565b5f81905092915050565b50565b5f6101e35f836101cb565b91506101ee826101d5565b5f82019050919050565b5f610202826101d8565b915081905091905056fea2646970667358221220ae909e3c1863454a998a1119258dcd788c80b87264f7caa3133fed431faa23db64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853828B6 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x14B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 SELFBALANCE LT ISZERO PUSH2 0xB7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xFC SWAP1 PUSH2 0x1F8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x148 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ PUSH2 0x1B5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH8 0x8AC7230489E80000 SELFBALANCE GT ISZERO PUSH2 0x1C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3 PUSH0 DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE DUP3 PUSH2 0x1D5 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x202 DUP3 PUSH2 0x1D8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE SWAP1 SWAP15 EXTCODECOPY XOR PUSH4 0x454A998A GT NOT 0x25 DUP14 0xCD PUSH25 0x8C80B87264F7CAA3133FED431FAA23DB64736F6C634300081C STOP CALLER ",
							"sourceMap": "177:621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;572:224;;;;;;;;;;;;;:::i;:::-;;346:170;;;:::i;:::-;;572:224;634:5;;;;;;;;;;;620:19;;:10;:19;;;612:28;;;;;;683:8;658:21;:33;;650:42;;;;;;703:11;720:5;;;;;;;;;;;:10;;738:21;720:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:62;;;782:6;774:15;;;;;;602:194;572:224::o;346:170::-;412:5;;;;;;;;;;;398:19;;:10;:19;;;390:28;;;;;;449:7;436:9;:20;428:29;;;;;;500:8;475:21;:33;;467:42;;;;;;346:170::o;7:147:1:-;108:11;145:3;130:18;;7:147;;;;:::o;160:114::-;;:::o;280:398::-;439:3;460:83;541:1;536:3;460:83;:::i;:::-;453:90;;552:93;641:3;552:93;:::i;:::-;670:1;665:3;661:11;654:18;;280:398;;;:::o;684:379::-;868:3;890:147;1033:3;890:147;:::i;:::-;883:154;;1054:3;1047:10;;684:379;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "115600",
								"executionCost": "24427",
								"totalCost": "140027"
							},
							"external": {
								"deposit()": "2337",
								"withdrawAll()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 177,
									"end": 798,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 177,
									"end": 798,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 798,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 297,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 297,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 248,
									"end": 297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 297,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 248,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 297,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 248,
									"end": 297,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 248,
									"end": 297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 280,
									"end": 290,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 272,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 272,
									"end": 290,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 272,
									"end": 290,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 272,
									"end": 290,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 272,
									"end": 290,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 177,
									"end": 798,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 798,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 177,
									"end": 798,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 177,
									"end": 798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 798,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 177,
									"end": 798,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 798,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae909e3c1863454a998a1119258dcd788c80b87264f7caa3133fed431faa23db64736f6c634300081c0033",
									".code": [
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "853828B6"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 798,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 516,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 346,
											"end": 516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 346,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 346,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 516,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 346,
											"end": 516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 516,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 572,
											"end": 796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 634,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 630,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 620,
											"end": 639,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 612,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 612,
											"end": 640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 612,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 612,
											"end": 640,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 612,
											"end": 640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 658,
											"end": 679,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 658,
											"end": 691,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 658,
											"end": 691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 650,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 725,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 720,
											"end": 725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 720,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 738,
											"end": 759,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 720,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 720,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 720,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 702,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 774,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 774,
											"end": 789,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 774,
											"end": 789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 789,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 774,
											"end": 789,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 774,
											"end": 789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 602,
											"end": 796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 516,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 346,
											"end": 516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 412,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 417,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 412,
											"end": 417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 412,
											"end": 417,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 412,
											"end": 417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 417,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 412,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 412,
											"end": 417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 398,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 398,
											"end": 408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 398,
											"end": 417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 398,
											"end": 417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 398,
											"end": 417,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 390,
											"end": 418,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 390,
											"end": 418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 436,
											"end": 445,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 456,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 428,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 457,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 428,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 475,
											"end": 496,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 475,
											"end": 508,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 475,
											"end": 508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 467,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 467,
											"end": 509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 467,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 467,
											"end": 509,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 467,
											"end": 509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 154,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 160,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 280,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 460,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 641,
											"end": 644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 552,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 552,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 890,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Security/36_forceFeeding.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdrawAll()": "853828b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Security/36_forceFeeding.sol\":\"Bank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Security/36_forceFeeding.sol\":{\"keccak256\":\"0x38eeb1ae5e874124118c1e84f7579f12a662274e3377c5af6cad043e0d67fb57\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dad689bce288b724fd6245da0906c02b931c9b550bffe938dc1ef7dbfe12bba0\",\"dweb:/ipfs/QmewxhKfQBgXywTT64pmhyguqpnpBT5eWSdeKgRnuojH9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Security/36_forceFeeding.sol:Bank",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Security/36_forceFeeding.sol": {
				"ast": {
					"absolutePath": "contracts/Security/36_forceFeeding.sol",
					"exportedSymbols": {
						"Bank": [
							79
						]
					},
					"id": 80,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "Bank",
							"nameLocation": "186:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "205:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 79,
									"src": "197:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "197:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "262:35:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "272:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "280:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "284:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "280:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "272:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "272:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:0:0"
									},
									"scope": 79,
									"src": "248:49:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "380:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "398:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "402:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "398:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 18,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "412:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "398:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "390:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "390:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 23,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "436:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "440:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "436:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "449:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "436:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "428:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "428:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 32,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "483:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Bank_$79",
																				"typeString": "contract Bank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Bank_$79",
																				"typeString": "contract Bank"
																			}
																		],
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "475:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 30,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "475:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "475:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "489:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "475:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "500:8:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"value": "10"
															},
															"src": "475:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "467:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "467:42:0"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "355:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:0"
									},
									"scope": 79,
									"src": "346:170:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "602:194:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 44,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "620:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "624:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "620:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 46,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "634:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "620:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "612:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "612:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 53,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "666:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Bank_$79",
																				"typeString": "contract Bank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Bank_$79",
																				"typeString": "contract Bank"
																			}
																		],
																		"id": 52,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "658:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 51,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "658:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "658:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "672:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "658:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "683:8:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"value": "10"
															},
															"src": "658:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "650:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "650:42:0"
											},
											{
												"assignments": [
													61,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "succes",
														"nameLocation": "708:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 77,
														"src": "703:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 60,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "703:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 72,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "761:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 62,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "720:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "726:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "720:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 66,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "746:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Bank_$79",
																				"typeString": "contract Bank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Bank_$79",
																				"typeString": "contract Bank"
																			}
																		],
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "738:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 64,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "738:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "738:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "752:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "738:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "720:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "720:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "702:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "succes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "782:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "774:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "774:15:0"
											}
										]
									},
									"functionSelector": "853828b6",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nameLocation": "581:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "602:0:0"
									},
									"scope": 79,
									"src": "572:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 80,
							"src": "177:621:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "36:763:0"
				},
				"id": 0
			}
		}
	}
}