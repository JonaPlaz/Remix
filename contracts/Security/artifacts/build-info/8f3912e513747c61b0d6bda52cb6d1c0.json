{
	"id": "8f3912e513747c61b0d6bda52cb6d1c0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Security/12_pullPayment.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.28;\n\ncontract auction {\n    address highestBidder;\n    uint256 highestBid;\n    mapping(address => uint256) refunds;\n\n    function bid() public payable {\n        require(msg.value >= highestBid);\n\n        if (highestBidder != address(0)) {\n            refunds[highestBidder] += highestBid;\n        }\n\n        highestBidder = msg.sender;\n        highestBid = msg.value;\n    }\n\n    function withdrawRefund() public payable {\n        uint256 refund = refunds[msg.sender];\n        refunds[msg.sender] = 0;\n        (bool succes, ) = msg.sender.call{value: refund}(\"\");\n        require(succes);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Security/12_pullPayment.sol": {
				"auction": {
					"abi": [
						{
							"inputs": [],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRefund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Security/12_pullPayment.sol\":61:651  contract auction {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Security/12_pullPayment.sol\":61:651  contract auction {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x110f8874\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1998aeef\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/Security/12_pullPayment.sol\":435:649  function withdrawRefund() public payable {... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/Security/12_pullPayment.sol\":177:429  function bid() public payable {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Security/12_pullPayment.sol\":435:649  function withdrawRefund() public payable {... */\n    tag_5:\n        /* \"contracts/Security/12_pullPayment.sol\":486:500  uint256 refund */\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":503:510  refunds */\n      0x02\n        /* \"contracts/Security/12_pullPayment.sol\":503:522  refunds[msg.sender] */\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":511:521  msg.sender */\n      caller\n        /* \"contracts/Security/12_pullPayment.sol\":503:522  refunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Security/12_pullPayment.sol\":486:522  uint256 refund = refunds[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":554:555  0 */\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":532:539  refunds */\n      0x02\n        /* \"contracts/Security/12_pullPayment.sol\":532:551  refunds[msg.sender] */\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":540:550  msg.sender */\n      caller\n        /* \"contracts/Security/12_pullPayment.sol\":532:551  refunds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Security/12_pullPayment.sol\":532:555  refunds[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":566:577  bool succes */\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":583:593  msg.sender */\n      caller\n        /* \"contracts/Security/12_pullPayment.sol\":583:598  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/12_pullPayment.sol\":606:612  refund */\n      dup3\n        /* \"contracts/Security/12_pullPayment.sol\":583:617  msg.sender.call{value: refund}(\"\") */\n      mload(0x40)\n      tag_9\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_13\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_12)\n    tag_13:\n      0x60\n      swap2\n      pop\n    tag_12:\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":565:617  (bool succes, ) = msg.sender.call{value: refund}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":635:641  succes */\n      dup1\n        /* \"contracts/Security/12_pullPayment.sol\":627:642  require(succes) */\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n        /* \"contracts/Security/12_pullPayment.sol\":476:649  {... */\n      pop\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":435:649  function withdrawRefund() public payable {... */\n      jump\t// out\n        /* \"contracts/Security/12_pullPayment.sol\":177:429  function bid() public payable {... */\n    tag_7:\n        /* \"contracts/Security/12_pullPayment.sol\":238:248  highestBid */\n      sload(0x01)\n        /* \"contracts/Security/12_pullPayment.sol\":225:234  msg.value */\n      callvalue\n        /* \"contracts/Security/12_pullPayment.sol\":225:248  msg.value >= highestBid */\n      lt\n      iszero\n        /* \"contracts/Security/12_pullPayment.sol\":217:249  require(msg.value >= highestBid) */\n      tag_16\n      jumpi\n      revert(0x00, 0x00)\n    tag_16:\n        /* \"contracts/Security/12_pullPayment.sol\":289:290  0 */\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":264:291  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/12_pullPayment.sol\":264:277  highestBidder */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/12_pullPayment.sol\":264:291  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Security/12_pullPayment.sol\":260:354  if (highestBidder != address(0)) {... */\n      tag_17\n      jumpi\n        /* \"contracts/Security/12_pullPayment.sol\":333:343  highestBid */\n      sload(0x01)\n        /* \"contracts/Security/12_pullPayment.sol\":307:314  refunds */\n      0x02\n        /* \"contracts/Security/12_pullPayment.sol\":307:329  refunds[highestBidder] */\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":315:328  highestBidder */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Security/12_pullPayment.sol\":307:329  refunds[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":307:343  refunds[highestBidder] += highestBid */\n      dup3\n      dup3\n      sload\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":260:354  if (highestBidder != address(0)) {... */\n    tag_17:\n        /* \"contracts/Security/12_pullPayment.sol\":380:390  msg.sender */\n      caller\n        /* \"contracts/Security/12_pullPayment.sol\":364:377  highestBidder */\n      0x00\n      0x00\n        /* \"contracts/Security/12_pullPayment.sol\":364:390  highestBidder = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":413:422  msg.value */\n      callvalue\n        /* \"contracts/Security/12_pullPayment.sol\":400:410  highestBid */\n      0x01\n        /* \"contracts/Security/12_pullPayment.sol\":400:422  highestBid = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Security/12_pullPayment.sol\":177:429  function bid() public payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:154   */\n    tag_20:\n        /* \"#utility.yul\":108:119   */\n      0x00\n        /* \"#utility.yul\":145:148   */\n      dup2\n        /* \"#utility.yul\":130:148   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":160:274   */\n    tag_21:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":280:678   */\n    tag_22:\n        /* \"#utility.yul\":439:442   */\n      0x00\n        /* \"#utility.yul\":460:543   */\n      tag_29\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":536:539   */\n      dup4\n        /* \"#utility.yul\":460:543   */\n      tag_20\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":453:543   */\n      swap2\n      pop\n        /* \"#utility.yul\":552:645   */\n      tag_30\n        /* \"#utility.yul\":641:644   */\n      dup3\n        /* \"#utility.yul\":552:645   */\n      tag_21\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":670:671   */\n      0x00\n        /* \"#utility.yul\":665:668   */\n      dup3\n        /* \"#utility.yul\":661:672   */\n      add\n        /* \"#utility.yul\":654:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":280:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:1063   */\n    tag_10:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":890:1037   */\n      tag_32\n        /* \"#utility.yul\":1033:1036   */\n      dup3\n        /* \"#utility.yul\":890:1037   */\n      tag_22\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":883:1037   */\n      swap2\n      pop\n        /* \"#utility.yul\":1054:1057   */\n      dup2\n        /* \"#utility.yul\":1047:1057   */\n      swap1\n      pop\n        /* \"#utility.yul\":684:1063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1069:1146   */\n    tag_23:\n        /* \"#utility.yul\":1106:1113   */\n      0x00\n        /* \"#utility.yul\":1135:1140   */\n      dup2\n        /* \"#utility.yul\":1124:1140   */\n      swap1\n      pop\n        /* \"#utility.yul\":1069:1146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1332   */\n    tag_24:\n        /* \"#utility.yul\":1200:1277   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1197:1198   */\n      0x00\n        /* \"#utility.yul\":1190:1278   */\n      mstore\n        /* \"#utility.yul\":1297:1301   */\n      0x11\n        /* \"#utility.yul\":1294:1295   */\n      0x04\n        /* \"#utility.yul\":1287:1302   */\n      mstore\n        /* \"#utility.yul\":1321:1325   */\n      0x24\n        /* \"#utility.yul\":1318:1319   */\n      0x00\n        /* \"#utility.yul\":1311:1326   */\n      revert\n        /* \"#utility.yul\":1338:1529   */\n    tag_19:\n        /* \"#utility.yul\":1378:1381   */\n      0x00\n        /* \"#utility.yul\":1397:1417   */\n      tag_36\n        /* \"#utility.yul\":1415:1416   */\n      dup3\n        /* \"#utility.yul\":1397:1417   */\n      tag_23\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1392:1417   */\n      swap2\n      pop\n        /* \"#utility.yul\":1431:1451   */\n      tag_37\n        /* \"#utility.yul\":1449:1450   */\n      dup4\n        /* \"#utility.yul\":1431:1451   */\n      tag_23\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1426:1451   */\n      swap3\n      pop\n        /* \"#utility.yul\":1474:1475   */\n      dup3\n        /* \"#utility.yul\":1471:1472   */\n      dup3\n        /* \"#utility.yul\":1467:1476   */\n      add\n        /* \"#utility.yul\":1460:1476   */\n      swap1\n      pop\n        /* \"#utility.yul\":1495:1498   */\n      dup1\n        /* \"#utility.yul\":1492:1493   */\n      dup3\n        /* \"#utility.yul\":1489:1499   */\n      gt\n        /* \"#utility.yul\":1486:1522   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1502:1520   */\n      tag_39\n      tag_24\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1486:1522   */\n    tag_38:\n        /* \"#utility.yul\":1338:1529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220523a94be6f59a7947354fd078865e13adc7f0438c80dda8dd3a732f514376d3364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506103378061001c5f395ff3fe608060405260043610610028575f3560e01c8063110f88741461002c5780631998aeef14610036575b5f5ffd5b610034610040565b005b61003e610138565b005b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f3373ffffffffffffffffffffffffffffffffffffffff16826040516100e890610284565b5f6040518083038185875af1925050503d805f8114610122576040519150601f19603f3d011682016040523d82523d5f602084013e610127565b606091505b5050905080610134575f5ffd5b5050565b600154341015610146575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020f5760015460025f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020791906102ce565b925050819055505b335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550565b5f81905092915050565b50565b5f61026f5f83610257565b915061027a82610261565b5f82019050919050565b5f61028e82610264565b9150819050919050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102d882610298565b91506102e383610298565b92508282019050808211156102fb576102fa6102a1565b5b9291505056fea2646970667358221220523a94be6f59a7947354fd078865e13adc7f0438c80dda8dd3a732f514376d3364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x337 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x110F8874 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x36 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x34 PUSH2 0x40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x122 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x134 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x146 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20F JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x26F PUSH0 DUP4 PUSH2 0x257 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A DUP3 PUSH2 0x261 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28E DUP3 PUSH2 0x264 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D8 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E3 DUP4 PUSH2 0x298 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FB JUMPI PUSH2 0x2FA PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE GASPRICE SWAP5 0xBE PUSH16 0x59A7947354FD078865E13ADC7F0438C8 0xD 0xDA DUP14 0xD3 0xA7 ORIGIN CREATE2 EQ CALLDATACOPY PUSH14 0x3364736F6C634300081C00330000 ",
							"sourceMap": "61:590:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@bid_44": {
									"entryPoint": 312,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawRefund_76": {
									"entryPoint": 64,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1532:1",
										"nodeType": "YulBlock",
										"src": "0:1532:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "120:34:1",
													"nodeType": "YulBlock",
													"src": "120:34:1",
													"statements": [
														{
															"nativeSrc": "130:18:1",
															"nodeType": "YulAssignment",
															"src": "130:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "145:3:1",
																"nodeType": "YulIdentifier",
																"src": "145:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "130:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "130:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "92:3:1",
														"nodeType": "YulTypedName",
														"src": "92:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "97:6:1",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "108:11:1",
														"nodeType": "YulTypedName",
														"src": "108:11:1",
														"type": ""
													}
												],
												"src": "7:147:1"
											},
											{
												"body": {
													"nativeSrc": "266:8:1",
													"nodeType": "YulBlock",
													"src": "266:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "160:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "258:6:1",
														"nodeType": "YulTypedName",
														"src": "258:6:1",
														"type": ""
													}
												],
												"src": "160:114:1"
											},
											{
												"body": {
													"nativeSrc": "443:235:1",
													"nodeType": "YulBlock",
													"src": "443:235:1",
													"statements": [
														{
															"nativeSrc": "453:90:1",
															"nodeType": "YulAssignment",
															"src": "453:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "536:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "536:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "541:1:1",
																		"nodeType": "YulLiteral",
																		"src": "541:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "460:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "460:75:1"
																},
																"nativeSrc": "460:83:1",
																"nodeType": "YulFunctionCall",
																"src": "460:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "453:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "453:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "641:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "552:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "552:88:1"
																},
																"nativeSrc": "552:93:1",
																"nodeType": "YulFunctionCall",
																"src": "552:93:1"
															},
															"nativeSrc": "552:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "552:93:1"
														},
														{
															"nativeSrc": "654:18:1",
															"nodeType": "YulAssignment",
															"src": "654:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "665:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "665:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:1:1",
																		"nodeType": "YulLiteral",
																		"src": "670:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "661:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:1"
																},
																"nativeSrc": "661:11:1",
																"nodeType": "YulFunctionCall",
																"src": "661:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "280:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "431:3:1",
														"nodeType": "YulTypedName",
														"src": "431:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "439:3:1",
														"nodeType": "YulTypedName",
														"src": "439:3:1",
														"type": ""
													}
												],
												"src": "280:398:1"
											},
											{
												"body": {
													"nativeSrc": "872:191:1",
													"nodeType": "YulBlock",
													"src": "872:191:1",
													"statements": [
														{
															"nativeSrc": "883:154:1",
															"nodeType": "YulAssignment",
															"src": "883:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1033:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1033:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "890:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:141:1"
																},
																"nativeSrc": "890:147:1",
																"nodeType": "YulFunctionCall",
																"src": "890:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:1"
																}
															]
														},
														{
															"nativeSrc": "1047:10:1",
															"nodeType": "YulAssignment",
															"src": "1047:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1054:3:1",
																"nodeType": "YulIdentifier",
																"src": "1054:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1047:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "684:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "859:3:1",
														"nodeType": "YulTypedName",
														"src": "859:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "868:3:1",
														"nodeType": "YulTypedName",
														"src": "868:3:1",
														"type": ""
													}
												],
												"src": "684:379:1"
											},
											{
												"body": {
													"nativeSrc": "1114:32:1",
													"nodeType": "YulBlock",
													"src": "1114:32:1",
													"statements": [
														{
															"nativeSrc": "1124:16:1",
															"nodeType": "YulAssignment",
															"src": "1124:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1135:5:1",
																"nodeType": "YulIdentifier",
																"src": "1135:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1124:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1124:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1069:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1096:5:1",
														"nodeType": "YulTypedName",
														"src": "1096:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1106:7:1",
														"nodeType": "YulTypedName",
														"src": "1106:7:1",
														"type": ""
													}
												],
												"src": "1069:77:1"
											},
											{
												"body": {
													"nativeSrc": "1180:152:1",
													"nodeType": "YulBlock",
													"src": "1180:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1197:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1200:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1200:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:1"
																},
																"nativeSrc": "1190:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1190:88:1"
															},
															"nativeSrc": "1190:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1190:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1294:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1294:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1297:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1297:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1287:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1287:6:1"
																},
																"nativeSrc": "1287:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1287:15:1"
															},
															"nativeSrc": "1287:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1287:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1318:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1318:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1321:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1321:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1311:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:1"
																},
																"nativeSrc": "1311:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:15:1"
															},
															"nativeSrc": "1311:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1311:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1152:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1152:180:1"
											},
											{
												"body": {
													"nativeSrc": "1382:147:1",
													"nodeType": "YulBlock",
													"src": "1382:147:1",
													"statements": [
														{
															"nativeSrc": "1392:25:1",
															"nodeType": "YulAssignment",
															"src": "1392:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1415:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1415:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1397:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1397:17:1"
																},
																"nativeSrc": "1397:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1397:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "1392:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:1:1"
																}
															]
														},
														{
															"nativeSrc": "1426:25:1",
															"nodeType": "YulAssignment",
															"src": "1426:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1449:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1431:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1431:17:1"
																},
																"nativeSrc": "1431:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1431:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "1426:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "1426:1:1"
																}
															]
														},
														{
															"nativeSrc": "1460:16:1",
															"nodeType": "YulAssignment",
															"src": "1460:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1471:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1471:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1474:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1474:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:1"
																},
																"nativeSrc": "1467:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1467:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1460:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1500:22:1",
																"nodeType": "YulBlock",
																"src": "1500:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1502:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1502:16:1"
																			},
																			"nativeSrc": "1502:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1502:18:1"
																		},
																		"nativeSrc": "1502:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1502:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1492:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1492:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1495:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1495:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1489:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1489:2:1"
																},
																"nativeSrc": "1489:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1489:10:1"
															},
															"nativeSrc": "1486:36:1",
															"nodeType": "YulIf",
															"src": "1486:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1338:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1369:1:1",
														"nodeType": "YulTypedName",
														"src": "1369:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1372:1:1",
														"nodeType": "YulTypedName",
														"src": "1372:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1378:3:1",
														"nodeType": "YulTypedName",
														"src": "1378:3:1",
														"type": ""
													}
												],
												"src": "1338:191:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610028575f3560e01c8063110f88741461002c5780631998aeef14610036575b5f5ffd5b610034610040565b005b61003e610138565b005b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f3373ffffffffffffffffffffffffffffffffffffffff16826040516100e890610284565b5f6040518083038185875af1925050503d805f8114610122576040519150601f19603f3d011682016040523d82523d5f602084013e610127565b606091505b5050905080610134575f5ffd5b5050565b600154341015610146575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020f5760015460025f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020791906102ce565b925050819055505b335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600181905550565b5f81905092915050565b50565b5f61026f5f83610257565b915061027a82610261565b5f82019050919050565b5f61028e82610264565b9150819050919050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102d882610298565b91506102e383610298565b92508282019050808211156102fb576102fa6102a1565b5b9291505056fea2646970667358221220523a94be6f59a7947354fd078865e13adc7f0438c80dda8dd3a732f514376d3364736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x110F8874 EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x36 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x34 PUSH2 0x40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x122 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x134 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x146 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20F JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x26F PUSH0 DUP4 PUSH2 0x257 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A DUP3 PUSH2 0x261 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28E DUP3 PUSH2 0x264 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2D8 DUP3 PUSH2 0x298 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E3 DUP4 PUSH2 0x298 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FB JUMPI PUSH2 0x2FA PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE GASPRICE SWAP5 0xBE PUSH16 0x59A7947354FD078865E13ADC7F0438C8 0xD 0xDA DUP14 0xD3 0xA7 ORIGIN CREATE2 EQ CALLDATACOPY PUSH14 0x3364736F6C634300081C00330000 ",
							"sourceMap": "61:590:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;435:214;;;:::i;:::-;;177:252;;;:::i;:::-;;435:214;486:14;503:7;:19;511:10;503:19;;;;;;;;;;;;;;;;486:36;;554:1;532:7;:19;540:10;532:19;;;;;;;;;;;;;;;:23;;;;566:11;583:10;:15;;606:6;583:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:52;;;635:6;627:15;;;;;;476:173;;435:214::o;177:252::-;238:10;;225:9;:23;;217:32;;;;;;289:1;264:27;;:13;;;;;;;;;;;:27;;;260:94;;333:10;;307:7;:22;315:13;;;;;;;;;;;307:22;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;260:94;380:10;364:13;;:26;;;;;;;;;;;;;;;;;;413:9;400:10;:22;;;;177:252::o;7:147:1:-;108:11;145:3;130:18;;7:147;;;;:::o;160:114::-;;:::o;280:398::-;439:3;460:83;541:1;536:3;460:83;:::i;:::-;453:90;;552:93;641:3;552:93;:::i;:::-;670:1;665:3;661:11;654:18;;280:398;;;:::o;684:379::-;868:3;890:147;1033:3;890:147;:::i;:::-;883:154;;1054:3;1047:10;;684:379;;;:::o;1069:77::-;1106:7;1135:5;1124:16;;1069:77;;;:::o;1152:180::-;1200:77;1197:1;1190:88;1297:4;1294:1;1287:15;1321:4;1318:1;1311:15;1338:191;1378:3;1397:20;1415:1;1397:20;:::i;:::-;1392:25;;1431:20;1449:1;1431:20;:::i;:::-;1426:25;;1474:1;1471;1467:9;1460:16;;1495:3;1492:1;1489:10;1486:36;;;1502:18;;:::i;:::-;1486:36;1338:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "164600",
								"executionCost": "206",
								"totalCost": "164806"
							},
							"external": {
								"bid()": "infinite",
								"withdrawRefund()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 651,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 651,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220523a94be6f59a7947354fd078865e13adc7f0438c80dda8dd3a732f514376d3364736f6c634300081c0033",
									".code": [
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "110F8874"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "1998AEEF"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 435,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 435,
											"end": 649,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 177,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 429,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 649,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 521,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 503,
											"end": 522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 486,
											"end": 522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 550,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 532,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 532,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 555,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 593,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 583,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 583,
											"end": 598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 583,
											"end": 617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 583,
											"end": 617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 583,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 635,
											"end": 641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 627,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 627,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 627,
											"end": 642,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 627,
											"end": 642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 476,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 476,
											"end": 649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 177,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 238,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 225,
											"end": 234,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 225,
											"end": 248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 225,
											"end": 248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 217,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 217,
											"end": 249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 217,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 217,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 264,
											"end": 291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 264,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 264,
											"end": 277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 264,
											"end": 277,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 264,
											"end": 277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 277,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 264,
											"end": 277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 264,
											"end": 277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 264,
											"end": 291,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 264,
											"end": 291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 264,
											"end": 291,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 260,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 333,
											"end": 343,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 333,
											"end": 343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 314,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 307,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 315,
											"end": 328,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 328,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 315,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 315,
											"end": 328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 307,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 307,
											"end": 343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 307,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 307,
											"end": 343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 260,
											"end": 354,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 380,
											"end": 390,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 364,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 364,
											"end": 390,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 364,
											"end": 390,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 364,
											"end": 390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 364,
											"end": 390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 422,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 400,
											"end": 410,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 400,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 400,
											"end": 422,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 400,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 154,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 160,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 280,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 641,
											"end": 644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 552,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 552,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 890,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1146,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1069,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1152,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1197,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1529,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1338,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1415,
											"end": 1416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1397,
											"end": 1417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1417,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1397,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1449,
											"end": 1450,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1431,
											"end": 1451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1431,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1451,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1486,
											"end": 1522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1502,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1486,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1529,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Security/12_pullPayment.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bid()": "1998aeef",
							"withdrawRefund()": "110f8874"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRefund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Security/12_pullPayment.sol\":\"auction\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Security/12_pullPayment.sol\":{\"keccak256\":\"0x5dd27ca173390c292374aa0209262d570b1b128a05ead42778fa6b97831904fa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be3aca66ce0873dde670f5ebf28f33d341043fb0acf9ca28a570d3ca1d2aee22\",\"dweb:/ipfs/QmQaR6tvTVKusLn5bGd7RsGCcAgnBYUYvXB3g6jVzBiniF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Security/12_pullPayment.sol:auction",
								"label": "highestBidder",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "contracts/Security/12_pullPayment.sol:auction",
								"label": "highestBid",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/Security/12_pullPayment.sol:auction",
								"label": "refunds",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Security/12_pullPayment.sol": {
				"ast": {
					"absolutePath": "contracts/Security/12_pullPayment.sol",
					"exportedSymbols": {
						"auction": [
							77
						]
					},
					"id": 78,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "auction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "auction",
							"nameLocation": "70:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "highestBidder",
									"nameLocation": "92:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "84:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "84:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "highestBid",
									"nameLocation": "119:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "111:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "111:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "refunds",
									"nameLocation": "163:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "135:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "143:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "135:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 7,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "154:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "207:222:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "225:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "229:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "225:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 15,
																"name": "highestBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "238:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "225:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "217:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "217:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 19,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "264:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "289:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 20,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "281:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "281:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "264:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 32,
												"nodeType": "IfStatement",
												"src": "260:94:0",
												"trueBody": {
													"id": 31,
													"nodeType": "Block",
													"src": "293:61:0",
													"statements": [
														{
															"expression": {
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 25,
																		"name": "refunds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "307:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 27,
																	"indexExpression": {
																		"id": 26,
																		"name": "highestBidder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "315:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "307:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 28,
																	"name": "highestBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "333:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "307:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 30,
															"nodeType": "ExpressionStatement",
															"src": "307:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "364:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 34,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "380:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "384:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "380:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "364:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "364:26:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 38,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 39,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "413:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "417:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "413:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "400:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "400:22:0"
											}
										]
									},
									"functionSelector": "1998aeef",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bid",
									"nameLocation": "186:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:0:0"
									},
									"scope": 77,
									"src": "177:252:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "476:173:0",
										"statements": [
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "refund",
														"nameLocation": "494:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "486:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"baseExpression": {
														"id": 49,
														"name": "refunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 52,
													"indexExpression": {
														"expression": {
															"id": 50,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "511:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "515:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "511:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "503:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "486:36:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 54,
															"name": "refunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "532:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 57,
														"indexExpression": {
															"expression": {
																"id": 55,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "540:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "544:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "540:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "532:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "554:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "532:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "532:23:0"
											},
											{
												"assignments": [
													62,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "succes",
														"nameLocation": "571:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 75,
														"src": "566:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 61,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "566:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 70,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "614:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 63,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "583:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "587:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "594:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "583:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 66,
																"name": "refund",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "606:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "583:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "565:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 72,
															"name": "succes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "635:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "627:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "627:15:0"
											}
										]
									},
									"functionSelector": "110f8874",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawRefund",
									"nameLocation": "444:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:0:0"
									},
									"scope": 77,
									"src": "435:214:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 78,
							"src": "61:590:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "36:616:0"
				},
				"id": 0
			}
		}
	}
}