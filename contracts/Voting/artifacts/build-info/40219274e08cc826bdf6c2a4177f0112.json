{
	"id": "40219274e08cc826bdf6c2a4177f0112",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Voting/Voting.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Voting is Ownable {\n    constructor() Ownable(msg.sender) {}\n\n    struct Voter {\n        bool isRegistered;\n        bool hasVoted;\n        uint256 votedProposalId;\n    }\n\n    struct Proposal {\n        string description;\n        uint256 voteCount;\n    }\n\n    enum WorkflowStatus {\n        RegisteringVoters,\n        ProposalsRegistrationStarted,\n        ProposalsRegistrationEnded,\n        VotingSessionStarted,\n        VotingSessionEnded,\n        VotesTallied\n    }\n\n    uint256 private winningProposalId;\n\n    mapping(address => bool) whitelist;\n\n    event VoterRegistered(address voterAddress);\n    event WorkflowStatusChange(\n        WorkflowStatus previousStatus,\n        WorkflowStatus newStatus\n    );\n    event ProposalRegistered(uint256 proposalId);\n    event Voted(address voter, uint256 proposalId);\n\n    function authorize() public onlyOwner {\n\n    }\n\n    function startProposalsSession() public onlyOwner {\n\n    }\n\n    function registerProposal() public {\n\n    }\n\n    function endProposalsSession() public onlyOwner {\n\n    }\n    \n    function startVotingSession() public onlyOwner {\n\n    }\n\n    function endVotingSession() public onlyOwner {\n\n    }\n\n    function countVotes() public  onlyOwner {\n\n    }\n\n    function getWinner() public pure returns (Proposal memory) {\n        // peut être à remettre en view après implémentation\n        return Proposal({description : 'proposition de test', voteCount: 20});\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Voting/Voting.sol": {
				"Voting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "ProposalRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voterAddress",
									"type": "address"
								}
							],
							"name": "VoterRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum Voting.WorkflowStatus",
									"name": "previousStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "enum Voting.WorkflowStatus",
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "WorkflowStatusChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authorize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "countVotes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endProposalsSession",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endVotingSession",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWinner",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "voteCount",
											"type": "uint256"
										}
									],
									"internalType": "struct Voting.Proposal",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registerProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startProposalsSession",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startVotingSession",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Voting/Voting.sol\":111:1553  contract Voting is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Voting/Voting.sol\":144:180  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Voting/Voting.sol\":166:176  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Voting/Voting.sol\":111:1553  contract Voting is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Voting/Voting.sol\":111:1553  contract Voting is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Voting/Voting.sol\":111:1553  contract Voting is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa7bfab16\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa7bfab16\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xababa4a7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb647990a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe47caad3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xee74c678\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x5edb7e63\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7776b77a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8e7ea5b2\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Voting/Voting.sol\":1101:1157  function endProposalsSession() public onlyOwner {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Voting/Voting.sol\":1052:1095  function registerProposal() public {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Voting/Voting.sol\":1341:1551  function getWinner() public pure returns (Proposal memory) {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Voting/Voting.sol\":1228:1281  function endVotingSession() public onlyOwner {... */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Voting/Voting.sol\":936:982  function authorize() public onlyOwner {... */\n    tag_9:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/Voting/Voting.sol\":1287:1335  function countVotes() public  onlyOwner {... */\n    tag_10:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/Voting/Voting.sol\":988:1046  function startProposalsSession() public onlyOwner {... */\n    tag_11:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/Voting/Voting.sol\":1167:1222  function startVotingSession() public onlyOwner {... */\n    tag_12:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/Voting/Voting.sol\":1101:1157  function endProposalsSession() public onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/Voting/Voting.sol\":1101:1157  function endProposalsSession() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Voting/Voting.sol\":1052:1095  function registerProposal() public {... */\n    tag_20:\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Voting/Voting.sol\":1341:1551  function getWinner() public pure returns (Proposal memory) {... */\n    tag_26:\n        /* \"contracts/Voting/Voting.sol\":1383:1398  Proposal memory */\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/Voting/Voting.sol\":1482:1544  Proposal({description : 'proposition de test', voteCount: 20}) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      0x70726f706f736974696f6e206465207465737400000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Voting/Voting.sol\":1540:1542  20 */\n      0x14\n        /* \"contracts/Voting/Voting.sol\":1482:1544  Proposal({description : 'proposition de test', voteCount: 20}) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Voting/Voting.sol\":1475:1544  return Proposal({description : 'proposition de test', voteCount: 20}) */\n      swap1\n      pop\n        /* \"contracts/Voting/Voting.sol\":1341:1551  function getWinner() public pure returns (Proposal memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Voting/Voting.sol\":1228:1281  function endVotingSession() public onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/Voting/Voting.sol\":1228:1281  function endVotingSession() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Voting/Voting.sol\":936:982  function authorize() public onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/Voting/Voting.sol\":936:982  function authorize() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Voting/Voting.sol\":1287:1335  function countVotes() public  onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_64:\n        /* \"contracts/Voting/Voting.sol\":1287:1335  function countVotes() public  onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Voting/Voting.sol\":988:1046  function startProposalsSession() public onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"contracts/Voting/Voting.sol\":988:1046  function startProposalsSession() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Voting/Voting.sol\":1167:1222  function startVotingSession() public onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_70:\n        /* \"contracts/Voting/Voting.sol\":1167:1222  function startVotingSession() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_75\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_22\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_82\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_55:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_87:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_88:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_106\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_87\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_89:\n        /* \"#utility.yul\":328:352   */\n      tag_108\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_88\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_24:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_110\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_89\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:692   */\n    tag_90:\n        /* \"#utility.yul\":645:651   */\n      0x00\n        /* \"#utility.yul\":679:684   */\n      dup2\n        /* \"#utility.yul\":673:685   */\n      mload\n        /* \"#utility.yul\":663:685   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:857   */\n    tag_91:\n        /* \"#utility.yul\":772:783   */\n      0x00\n        /* \"#utility.yul\":806:812   */\n      dup3\n        /* \"#utility.yul\":801:804   */\n      dup3\n        /* \"#utility.yul\":794:813   */\n      mstore\n        /* \"#utility.yul\":846:850   */\n      0x20\n        /* \"#utility.yul\":841:844   */\n      dup3\n        /* \"#utility.yul\":837:851   */\n      add\n        /* \"#utility.yul\":822:851   */\n      swap1\n      pop\n        /* \"#utility.yul\":698:857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":863:1002   */\n    tag_92:\n        /* \"#utility.yul\":952:958   */\n      dup3\n        /* \"#utility.yul\":947:950   */\n      dup2\n        /* \"#utility.yul\":942:945   */\n      dup4\n        /* \"#utility.yul\":936:959   */\n      mcopy\n        /* \"#utility.yul\":993:994   */\n      0x00\n        /* \"#utility.yul\":984:990   */\n      dup4\n        /* \"#utility.yul\":979:982   */\n      dup4\n        /* \"#utility.yul\":975:991   */\n      add\n        /* \"#utility.yul\":968:995   */\n      mstore\n        /* \"#utility.yul\":863:1002   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1008:1110   */\n    tag_93:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1096:1103   */\n      not\n        /* \"#utility.yul\":1091:1093   */\n      0x1f\n        /* \"#utility.yul\":1084:1089   */\n      dup4\n        /* \"#utility.yul\":1080:1094   */\n      add\n        /* \"#utility.yul\":1076:1104   */\n      and\n        /* \"#utility.yul\":1066:1104   */\n      swap1\n      pop\n        /* \"#utility.yul\":1008:1110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1116:1473   */\n    tag_94:\n        /* \"#utility.yul\":1194:1197   */\n      0x00\n        /* \"#utility.yul\":1222:1261   */\n      tag_116\n        /* \"#utility.yul\":1255:1260   */\n      dup3\n        /* \"#utility.yul\":1222:1261   */\n      tag_90\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1277:1338   */\n      tag_117\n        /* \"#utility.yul\":1331:1337   */\n      dup2\n        /* \"#utility.yul\":1326:1329   */\n      dup6\n        /* \"#utility.yul\":1277:1338   */\n      tag_91\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1270:1338   */\n      swap4\n      pop\n        /* \"#utility.yul\":1347:1412   */\n      tag_118\n        /* \"#utility.yul\":1405:1411   */\n      dup2\n        /* \"#utility.yul\":1400:1403   */\n      dup6\n        /* \"#utility.yul\":1393:1397   */\n      0x20\n        /* \"#utility.yul\":1386:1391   */\n      dup7\n        /* \"#utility.yul\":1382:1398   */\n      add\n        /* \"#utility.yul\":1347:1412   */\n      tag_92\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1437:1466   */\n      tag_119\n        /* \"#utility.yul\":1459:1465   */\n      dup2\n        /* \"#utility.yul\":1437:1466   */\n      tag_93\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1432:1435   */\n      dup5\n        /* \"#utility.yul\":1428:1467   */\n      add\n        /* \"#utility.yul\":1421:1467   */\n      swap2\n      pop\n        /* \"#utility.yul\":1198:1473   */\n      pop\n        /* \"#utility.yul\":1116:1473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1556   */\n    tag_95:\n        /* \"#utility.yul\":1516:1523   */\n      0x00\n        /* \"#utility.yul\":1545:1550   */\n      dup2\n        /* \"#utility.yul\":1534:1550   */\n      swap1\n      pop\n        /* \"#utility.yul\":1479:1556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1562:1670   */\n    tag_96:\n        /* \"#utility.yul\":1639:1663   */\n      tag_122\n        /* \"#utility.yul\":1657:1662   */\n      dup2\n        /* \"#utility.yul\":1639:1663   */\n      tag_95\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1634:1637   */\n      dup3\n        /* \"#utility.yul\":1627:1664   */\n      mstore\n        /* \"#utility.yul\":1562:1670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1732:2350   */\n    tag_97:\n        /* \"#utility.yul\":1851:1854   */\n      0x00\n        /* \"#utility.yul\":1887:1891   */\n      0x40\n        /* \"#utility.yul\":1882:1885   */\n      dup4\n        /* \"#utility.yul\":1878:1892   */\n      add\n        /* \"#utility.yul\":1981:1985   */\n      0x00\n        /* \"#utility.yul\":1974:1979   */\n      dup4\n        /* \"#utility.yul\":1970:1986   */\n      add\n        /* \"#utility.yul\":1964:1987   */\n      mload\n        /* \"#utility.yul\":2034:2037   */\n      dup5\n        /* \"#utility.yul\":2028:2032   */\n      dup3\n        /* \"#utility.yul\":2024:2038   */\n      sub\n        /* \"#utility.yul\":2017:2021   */\n      0x00\n        /* \"#utility.yul\":2012:2015   */\n      dup7\n        /* \"#utility.yul\":2008:2022   */\n      add\n        /* \"#utility.yul\":2001:2039   */\n      mstore\n        /* \"#utility.yul\":2060:2133   */\n      tag_124\n        /* \"#utility.yul\":2128:2132   */\n      dup3\n        /* \"#utility.yul\":2114:2126   */\n      dup3\n        /* \"#utility.yul\":2060:2133   */\n      tag_94\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2052:2133   */\n      swap2\n      pop\n        /* \"#utility.yul\":1902:2144   */\n      pop\n        /* \"#utility.yul\":2231:2235   */\n      0x20\n        /* \"#utility.yul\":2224:2229   */\n      dup4\n        /* \"#utility.yul\":2220:2236   */\n      add\n        /* \"#utility.yul\":2214:2237   */\n      mload\n        /* \"#utility.yul\":2250:2313   */\n      tag_125\n        /* \"#utility.yul\":2307:2311   */\n      0x20\n        /* \"#utility.yul\":2302:2305   */\n      dup7\n        /* \"#utility.yul\":2298:2312   */\n      add\n        /* \"#utility.yul\":2284:2296   */\n      dup3\n        /* \"#utility.yul\":2250:2313   */\n      tag_96\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2154:2323   */\n      pop\n        /* \"#utility.yul\":2340:2344   */\n      dup1\n        /* \"#utility.yul\":2333:2344   */\n      swap2\n      pop\n        /* \"#utility.yul\":1856:2350   */\n      pop\n        /* \"#utility.yul\":1732:2350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2729   */\n    tag_28:\n        /* \"#utility.yul\":2499:2503   */\n      0x00\n        /* \"#utility.yul\":2537:2539   */\n      0x20\n        /* \"#utility.yul\":2526:2535   */\n      dup3\n        /* \"#utility.yul\":2522:2540   */\n      add\n        /* \"#utility.yul\":2514:2540   */\n      swap1\n      pop\n        /* \"#utility.yul\":2586:2595   */\n      dup2\n        /* \"#utility.yul\":2580:2584   */\n      dup2\n        /* \"#utility.yul\":2576:2596   */\n      sub\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2561:2570   */\n      dup4\n        /* \"#utility.yul\":2557:2574   */\n      add\n        /* \"#utility.yul\":2550:2597   */\n      mstore\n        /* \"#utility.yul\":2614:2722   */\n      tag_127\n        /* \"#utility.yul\":2717:2721   */\n      dup2\n        /* \"#utility.yul\":2708:2714   */\n      dup5\n        /* \"#utility.yul\":2614:2722   */\n      tag_97\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2606:2722   */\n      swap1\n      pop\n        /* \"#utility.yul\":2356:2729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2816:2933   */\n    tag_99:\n        /* \"#utility.yul\":2925:2926   */\n      0x00\n        /* \"#utility.yul\":2922:2923   */\n      dup1\n        /* \"#utility.yul\":2915:2927   */\n      revert\n        /* \"#utility.yul\":3062:3184   */\n    tag_101:\n        /* \"#utility.yul\":3135:3159   */\n      tag_132\n        /* \"#utility.yul\":3153:3158   */\n      dup2\n        /* \"#utility.yul\":3135:3159   */\n      tag_88\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3128:3133   */\n      dup2\n        /* \"#utility.yul\":3125:3160   */\n      eq\n        /* \"#utility.yul\":3115:3178   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3171:3172   */\n      dup1\n        /* \"#utility.yul\":3164:3176   */\n      revert\n        /* \"#utility.yul\":3115:3178   */\n    tag_133:\n        /* \"#utility.yul\":3062:3184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3190:3329   */\n    tag_102:\n        /* \"#utility.yul\":3236:3241   */\n      0x00\n        /* \"#utility.yul\":3274:3280   */\n      dup2\n        /* \"#utility.yul\":3261:3281   */\n      calldataload\n        /* \"#utility.yul\":3252:3281   */\n      swap1\n      pop\n        /* \"#utility.yul\":3290:3323   */\n      tag_135\n        /* \"#utility.yul\":3317:3322   */\n      dup2\n        /* \"#utility.yul\":3290:3323   */\n      tag_101\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3190:3329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3335:3664   */\n    tag_41:\n        /* \"#utility.yul\":3394:3400   */\n      0x00\n        /* \"#utility.yul\":3443:3445   */\n      0x20\n        /* \"#utility.yul\":3431:3440   */\n      dup3\n        /* \"#utility.yul\":3422:3429   */\n      dup5\n        /* \"#utility.yul\":3418:3441   */\n      sub\n        /* \"#utility.yul\":3414:3446   */\n      slt\n        /* \"#utility.yul\":3411:3530   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3449:3528   */\n      tag_138\n      tag_99\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3411:3530   */\n    tag_137:\n        /* \"#utility.yul\":3569:3570   */\n      0x00\n        /* \"#utility.yul\":3594:3647   */\n      tag_139\n        /* \"#utility.yul\":3639:3646   */\n      dup5\n        /* \"#utility.yul\":3630:3636   */\n      dup3\n        /* \"#utility.yul\":3619:3628   */\n      dup6\n        /* \"#utility.yul\":3615:3637   */\n      add\n        /* \"#utility.yul\":3594:3647   */\n      tag_102\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3584:3647   */\n      swap2\n      pop\n        /* \"#utility.yul\":3540:3657   */\n      pop\n        /* \"#utility.yul\":3335:3664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200e1a9feacd496a83cee71017426c5a5a4c77cb43d3a6432c1e8a6fb6ee9cf11664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_190": {
									"entryPoint": null,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b6105d8806101bc5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063a7bfab161161006f578063a7bfab1614610105578063ababa4a71461010f578063b647990a14610119578063e47caad314610123578063ee74c6781461012d578063f2fde38b14610137576100a7565b80635edb7e63146100ab578063715018a6146100b55780637776b77a146100bf5780638da5cb5b146100c95780638e7ea5b2146100e7575b5f80fd5b6100b3610153565b005b6100bd61015d565b005b6100c7610170565b005b6100d1610172565b6040516100de919061044e565b60405180910390f35b6100ef610199565b6040516100fc9190610529565b60405180910390f35b61010d6101f1565b005b6101176101fb565b005b610121610205565b005b61012b61020f565b005b610135610219565b005b610151600480360381019061014c9190610577565b610223565b005b61015b6102a7565b565b6101656102a7565b61016e5f61032e565b565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101a16103f6565b60405180604001604052806040518060400160405280601381526020017f70726f706f736974696f6e20646520746573740000000000000000000000000081525081526020016014815250905090565b6101f96102a7565b565b6102036102a7565b565b61020d6102a7565b565b6102176102a7565b565b6102216102a7565b565b61022b6102a7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361029b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610292919061044e565b60405180910390fd5b6102a48161032e565b50565b6102af6103ef565b73ffffffffffffffffffffffffffffffffffffffff166102cd610172565b73ffffffffffffffffffffffffffffffffffffffff161461032c576102f06103ef565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610323919061044e565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b6040518060400160405280606081526020015f81525090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104388261040f565b9050919050565b6104488161042e565b82525050565b5f6020820190506104615f83018461043f565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6104a982610467565b6104b38185610471565b93506104c3818560208601610481565b6104cc8161048f565b840191505092915050565b5f819050919050565b6104e9816104d7565b82525050565b5f604083015f8301518482035f860152610509828261049f565b915050602083015161051e60208601826104e0565b508091505092915050565b5f6020820190508181035f83015261054181846104ef565b905092915050565b5f80fd5b6105568161042e565b8114610560575f80fd5b50565b5f813590506105718161054d565b92915050565b5f6020828403121561058c5761058b610549565b5b5f61059984828501610563565b9150509291505056fea26469706673582212200e1a9feacd496a83cee71017426c5a5a4c77cb43d3a6432c1e8a6fb6ee9cf11664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5D8 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BFAB16 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA7BFAB16 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xABABA4A7 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xB647990A EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xE47CAAD3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xEE74C678 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x137 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x5EDB7E63 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x7776B77A EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x153 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH2 0x170 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH2 0x20F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15B PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x16E PUSH0 PUSH2 0x32E JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x70726F706F736974696F6E206465207465737400000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x14 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x203 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x20D PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x217 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x221 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x22B PUSH2 0x2A7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x32E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x3EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CD PUSH2 0x172 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32C JUMPI PUSH2 0x2F0 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x438 DUP3 PUSH2 0x40F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x42E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x461 PUSH0 DUP4 ADD DUP5 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A9 DUP3 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x4B3 DUP2 DUP6 PUSH2 0x471 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x481 JUMP JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0x48F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E9 DUP2 PUSH2 0x4D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x509 DUP3 DUP3 PUSH2 0x49F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x51E PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4E0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x541 DUP2 DUP5 PUSH2 0x4EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x556 DUP2 PUSH2 0x42E JUMP JUMPDEST DUP2 EQ PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x571 DUP2 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x549 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x599 DUP5 DUP3 DUP6 ADD PUSH2 0x563 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE BYTE SWAP16 0xEA 0xCD BLOBHASH PUSH11 0x83CEE71017426C5A5A4C77 0xCB NUMBER 0xD3 0xA6 NUMBER 0x2C 0x1E DUP11 PUSH16 0xB6EE9CF11664736F6C634300081A0033 ",
							"sourceMap": "111:1442:2:-:0;;;144:36;;;;;;;;;;166:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;111:1442:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;111:1442:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 679,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1007,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 814,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorize_243": {
									"entryPoint": 507,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@countVotes_277": {
									"entryPoint": 517,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endProposalsSession_259": {
									"entryPoint": 339,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endVotingSession_271": {
									"entryPoint": 497,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getWinner_289": {
									"entryPoint": 409,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 370,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerProposal_253": {
									"entryPoint": 368,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 349,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startProposalsSession_249": {
									"entryPoint": 527,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startVotingSession_265": {
									"entryPoint": 537,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 547,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Proposal_$202_memory_ptr_to_t_struct$_Proposal_$202_memory_ptr_fromStack": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Proposal_$202_memory_ptr__to_t_struct$_Proposal_$202_memory_ptr__fromStack_reversed": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3667:3",
										"nodeType": "YulBlock",
										"src": "0:3667:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "652:40:3",
													"nodeType": "YulBlock",
													"src": "652:40:3",
													"statements": [
														{
															"nativeSrc": "663:22:3",
															"nodeType": "YulAssignment",
															"src": "663:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "679:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "679:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:3"
																},
																"nativeSrc": "673:12:3",
																"nodeType": "YulFunctionCall",
																"src": "673:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "663:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "593:99:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "635:5:3",
														"nodeType": "YulTypedName",
														"src": "635:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "645:6:3",
														"nodeType": "YulTypedName",
														"src": "645:6:3",
														"type": ""
													}
												],
												"src": "593:99:3"
											},
											{
												"body": {
													"nativeSrc": "784:73:3",
													"nodeType": "YulBlock",
													"src": "784:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "801:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "806:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "806:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "794:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "794:6:3"
																},
																"nativeSrc": "794:19:3",
																"nodeType": "YulFunctionCall",
																"src": "794:19:3"
															},
															"nativeSrc": "794:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "794:19:3"
														},
														{
															"nativeSrc": "822:29:3",
															"nodeType": "YulAssignment",
															"src": "822:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "841:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "841:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:4:3",
																		"nodeType": "YulLiteral",
																		"src": "846:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "837:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:3"
																},
																"nativeSrc": "837:14:3",
																"nodeType": "YulFunctionCall",
																"src": "837:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "822:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "822:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "698:159:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "756:3:3",
														"nodeType": "YulTypedName",
														"src": "756:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "761:6:3",
														"nodeType": "YulTypedName",
														"src": "761:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "772:11:3",
														"nodeType": "YulTypedName",
														"src": "772:11:3",
														"type": ""
													}
												],
												"src": "698:159:3"
											},
											{
												"body": {
													"nativeSrc": "925:77:3",
													"nodeType": "YulBlock",
													"src": "925:77:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "942:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "942:3:3"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "947:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "947:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "952:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "952:6:3"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "936:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:3"
																},
																"nativeSrc": "936:23:3",
																"nodeType": "YulFunctionCall",
																"src": "936:23:3"
															},
															"nativeSrc": "936:23:3",
															"nodeType": "YulExpressionStatement",
															"src": "936:23:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "979:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "979:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "984:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "984:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "975:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:3"
																		},
																		"nativeSrc": "975:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "975:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "993:1:3",
																		"nodeType": "YulLiteral",
																		"src": "993:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "968:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "968:6:3"
																},
																"nativeSrc": "968:27:3",
																"nodeType": "YulFunctionCall",
																"src": "968:27:3"
															},
															"nativeSrc": "968:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "968:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "863:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "907:3:3",
														"nodeType": "YulTypedName",
														"src": "907:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "912:3:3",
														"nodeType": "YulTypedName",
														"src": "912:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "917:6:3",
														"nodeType": "YulTypedName",
														"src": "917:6:3",
														"type": ""
													}
												],
												"src": "863:139:3"
											},
											{
												"body": {
													"nativeSrc": "1056:54:3",
													"nodeType": "YulBlock",
													"src": "1056:54:3",
													"statements": [
														{
															"nativeSrc": "1066:38:3",
															"nodeType": "YulAssignment",
															"src": "1066:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1084:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1084:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1091:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1091:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1080:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:3"
																		},
																		"nativeSrc": "1080:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1080:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1100:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1100:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1096:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1096:3:3"
																		},
																		"nativeSrc": "1096:7:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1096:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1076:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:3"
																},
																"nativeSrc": "1076:28:3",
																"nodeType": "YulFunctionCall",
																"src": "1076:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1066:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1066:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1008:102:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:3",
														"nodeType": "YulTypedName",
														"src": "1039:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1049:6:3",
														"nodeType": "YulTypedName",
														"src": "1049:6:3",
														"type": ""
													}
												],
												"src": "1008:102:3"
											},
											{
												"body": {
													"nativeSrc": "1198:275:3",
													"nodeType": "YulBlock",
													"src": "1198:275:3",
													"statements": [
														{
															"nativeSrc": "1208:53:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1208:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1255:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1255:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1222:32:3",
																	"nodeType": "YulIdentifier",
																	"src": "1222:32:3"
																},
																"nativeSrc": "1222:39:3",
																"nodeType": "YulFunctionCall",
																"src": "1222:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1212:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1212:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1270:68:3",
															"nodeType": "YulAssignment",
															"src": "1270:68:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1326:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1326:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1331:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1331:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "1277:48:3",
																	"nodeType": "YulIdentifier",
																	"src": "1277:48:3"
																},
																"nativeSrc": "1277:61:3",
																"nodeType": "YulFunctionCall",
																"src": "1277:61:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1270:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1270:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1386:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1386:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1393:4:3",
																				"nodeType": "YulLiteral",
																				"src": "1393:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1382:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1382:3:3"
																		},
																		"nativeSrc": "1382:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1382:16:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1400:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1400:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1405:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1405:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1347:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "1347:34:3"
																},
																"nativeSrc": "1347:65:3",
																"nodeType": "YulFunctionCall",
																"src": "1347:65:3"
															},
															"nativeSrc": "1347:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "1347:65:3"
														},
														{
															"nativeSrc": "1421:46:3",
															"nodeType": "YulAssignment",
															"src": "1421:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1432:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1432:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1459:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1459:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1437:21:3",
																			"nodeType": "YulIdentifier",
																			"src": "1437:21:3"
																		},
																		"nativeSrc": "1437:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1437:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1428:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:3"
																},
																"nativeSrc": "1428:39:3",
																"nodeType": "YulFunctionCall",
																"src": "1428:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1421:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1421:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "1116:357:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1179:5:3",
														"nodeType": "YulTypedName",
														"src": "1179:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1186:3:3",
														"nodeType": "YulTypedName",
														"src": "1186:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1194:3:3",
														"nodeType": "YulTypedName",
														"src": "1194:3:3",
														"type": ""
													}
												],
												"src": "1116:357:3"
											},
											{
												"body": {
													"nativeSrc": "1524:32:3",
													"nodeType": "YulBlock",
													"src": "1524:32:3",
													"statements": [
														{
															"nativeSrc": "1534:16:3",
															"nodeType": "YulAssignment",
															"src": "1534:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1545:5:3",
																"nodeType": "YulIdentifier",
																"src": "1545:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1534:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1534:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1479:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1506:5:3",
														"nodeType": "YulTypedName",
														"src": "1506:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1516:7:3",
														"nodeType": "YulTypedName",
														"src": "1516:7:3",
														"type": ""
													}
												],
												"src": "1479:77:3"
											},
											{
												"body": {
													"nativeSrc": "1617:53:3",
													"nodeType": "YulBlock",
													"src": "1617:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1634:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1634:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1657:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1657:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1639:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1639:17:3"
																		},
																		"nativeSrc": "1639:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1639:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1627:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:3"
																},
																"nativeSrc": "1627:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1627:37:3"
															},
															"nativeSrc": "1627:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1627:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1562:108:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1605:5:3",
														"nodeType": "YulTypedName",
														"src": "1605:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1612:3:3",
														"nodeType": "YulTypedName",
														"src": "1612:3:3",
														"type": ""
													}
												],
												"src": "1562:108:3"
											},
											{
												"body": {
													"nativeSrc": "1856:494:3",
													"nodeType": "YulBlock",
													"src": "1856:494:3",
													"statements": [
														{
															"nativeSrc": "1866:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1866:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1882:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1887:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1887:4:3",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1878:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:3"
																},
																"nativeSrc": "1878:14:3",
																"nodeType": "YulFunctionCall",
																"src": "1878:14:3"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1870:4:3",
																	"nodeType": "YulTypedName",
																	"src": "1870:4:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1902:242:3",
															"nodeType": "YulBlock",
															"src": "1902:242:3",
															"statements": [
																{
																	"nativeSrc": "1944:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1944:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1974:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1974:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1981:4:3",
																						"nodeType": "YulLiteral",
																						"src": "1981:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1970:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1970:3:3"
																				},
																				"nativeSrc": "1970:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1970:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1964:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "1964:5:3"
																		},
																		"nativeSrc": "1964:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1964:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1948:12:3",
																			"nodeType": "YulTypedName",
																			"src": "1948:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2012:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2012:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2017:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2017:4:3",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2008:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2008:3:3"
																				},
																				"nativeSrc": "2008:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2008:14:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "2028:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "2028:4:3"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "2034:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2034:3:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2024:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2024:3:3"
																				},
																				"nativeSrc": "2024:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2024:14:3"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "2001:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2001:6:3"
																		},
																		"nativeSrc": "2001:38:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2001:38:3"
																	},
																	"nativeSrc": "2001:38:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "2001:38:3"
																},
																{
																	"nativeSrc": "2052:81:3",
																	"nodeType": "YulAssignment",
																	"src": "2052:81:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2114:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "2114:12:3"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "2128:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2128:4:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "2060:53:3",
																			"nodeType": "YulIdentifier",
																			"src": "2060:53:3"
																		},
																		"nativeSrc": "2060:73:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2060:73:3"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "2052:4:3",
																			"nodeType": "YulIdentifier",
																			"src": "2052:4:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2154:169:3",
															"nodeType": "YulBlock",
															"src": "2154:169:3",
															"statements": [
																{
																	"nativeSrc": "2194:43:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2194:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2224:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2224:5:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2231:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2231:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2220:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2220:3:3"
																				},
																				"nativeSrc": "2220:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2220:16:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2214:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "2214:5:3"
																		},
																		"nativeSrc": "2214:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2214:23:3"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2198:12:3",
																			"nodeType": "YulTypedName",
																			"src": "2198:12:3",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2284:12:3",
																				"nodeType": "YulIdentifier",
																				"src": "2284:12:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2302:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2307:4:3",
																						"nodeType": "YulLiteral",
																						"src": "2307:4:3",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2298:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2298:3:3"
																				},
																				"nativeSrc": "2298:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2298:14:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2250:33:3",
																			"nodeType": "YulIdentifier",
																			"src": "2250:33:3"
																		},
																		"nativeSrc": "2250:63:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:63:3"
																	},
																	"nativeSrc": "2250:63:3",
																	"nodeType": "YulExpressionStatement",
																	"src": "2250:63:3"
																}
															]
														},
														{
															"nativeSrc": "2333:11:3",
															"nodeType": "YulAssignment",
															"src": "2333:11:3",
															"value": {
																"name": "tail",
																"nativeSrc": "2340:4:3",
																"nodeType": "YulIdentifier",
																"src": "2340:4:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2333:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2333:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Proposal_$202_memory_ptr_to_t_struct$_Proposal_$202_memory_ptr_fromStack",
												"nativeSrc": "1732:618:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:3",
														"nodeType": "YulTypedName",
														"src": "1835:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1842:3:3",
														"nodeType": "YulTypedName",
														"src": "1842:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1851:3:3",
														"nodeType": "YulTypedName",
														"src": "1851:3:3",
														"type": ""
													}
												],
												"src": "1732:618:3"
											},
											{
												"body": {
													"nativeSrc": "2504:225:3",
													"nodeType": "YulBlock",
													"src": "2504:225:3",
													"statements": [
														{
															"nativeSrc": "2514:26:3",
															"nodeType": "YulAssignment",
															"src": "2514:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2526:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2526:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2537:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2537:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2522:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2522:3:3"
																},
																"nativeSrc": "2522:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2522:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2514:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2514:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2561:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2561:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2572:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2572:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2557:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:3"
																		},
																		"nativeSrc": "2557:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2580:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2580:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2586:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2576:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:3"
																		},
																		"nativeSrc": "2576:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2550:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:3"
																},
																"nativeSrc": "2550:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2550:47:3"
															},
															"nativeSrc": "2550:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2550:47:3"
														},
														{
															"nativeSrc": "2606:116:3",
															"nodeType": "YulAssignment",
															"src": "2606:116:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2708:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2708:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2717:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2717:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Proposal_$202_memory_ptr_to_t_struct$_Proposal_$202_memory_ptr_fromStack",
																	"nativeSrc": "2614:93:3",
																	"nodeType": "YulIdentifier",
																	"src": "2614:93:3"
																},
																"nativeSrc": "2614:108:3",
																"nodeType": "YulFunctionCall",
																"src": "2614:108:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2606:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2606:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Proposal_$202_memory_ptr__to_t_struct$_Proposal_$202_memory_ptr__fromStack_reversed",
												"nativeSrc": "2356:373:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2476:9:3",
														"nodeType": "YulTypedName",
														"src": "2476:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2488:6:3",
														"nodeType": "YulTypedName",
														"src": "2488:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2499:4:3",
														"nodeType": "YulTypedName",
														"src": "2499:4:3",
														"type": ""
													}
												],
												"src": "2356:373:3"
											},
											{
												"body": {
													"nativeSrc": "2775:35:3",
													"nodeType": "YulBlock",
													"src": "2775:35:3",
													"statements": [
														{
															"nativeSrc": "2785:19:3",
															"nodeType": "YulAssignment",
															"src": "2785:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2801:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2801:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2795:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2795:5:3"
																},
																"nativeSrc": "2795:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2795:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2785:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2735:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2768:6:3",
														"nodeType": "YulTypedName",
														"src": "2768:6:3",
														"type": ""
													}
												],
												"src": "2735:75:3"
											},
											{
												"body": {
													"nativeSrc": "2905:28:3",
													"nodeType": "YulBlock",
													"src": "2905:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2922:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2922:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2925:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2925:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2915:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:3"
																},
																"nativeSrc": "2915:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2915:12:3"
															},
															"nativeSrc": "2915:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "2915:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2816:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2816:117:3"
											},
											{
												"body": {
													"nativeSrc": "3028:28:3",
													"nodeType": "YulBlock",
													"src": "3028:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3045:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3048:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3048:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3038:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:3"
																},
																"nativeSrc": "3038:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3038:12:3"
															},
															"nativeSrc": "3038:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "3038:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2939:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2939:117:3"
											},
											{
												"body": {
													"nativeSrc": "3105:79:3",
													"nodeType": "YulBlock",
													"src": "3105:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3162:16:3",
																"nodeType": "YulBlock",
																"src": "3162:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3171:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3171:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3174:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3164:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3164:6:3"
																			},
																			"nativeSrc": "3164:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3164:12:3"
																		},
																		"nativeSrc": "3164:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3164:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3128:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3128:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3153:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3153:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3135:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "3135:17:3"
																				},
																				"nativeSrc": "3135:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3135:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3125:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3125:2:3"
																		},
																		"nativeSrc": "3125:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3125:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3118:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3118:6:3"
																},
																"nativeSrc": "3118:43:3",
																"nodeType": "YulFunctionCall",
																"src": "3118:43:3"
															},
															"nativeSrc": "3115:63:3",
															"nodeType": "YulIf",
															"src": "3115:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3062:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3098:5:3",
														"nodeType": "YulTypedName",
														"src": "3098:5:3",
														"type": ""
													}
												],
												"src": "3062:122:3"
											},
											{
												"body": {
													"nativeSrc": "3242:87:3",
													"nodeType": "YulBlock",
													"src": "3242:87:3",
													"statements": [
														{
															"nativeSrc": "3252:29:3",
															"nodeType": "YulAssignment",
															"src": "3252:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3274:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3274:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3261:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3261:12:3"
																},
																"nativeSrc": "3261:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3261:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3252:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3252:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3317:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3317:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3290:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "3290:26:3"
																},
																"nativeSrc": "3290:33:3",
																"nodeType": "YulFunctionCall",
																"src": "3290:33:3"
															},
															"nativeSrc": "3290:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "3290:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3190:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3220:6:3",
														"nodeType": "YulTypedName",
														"src": "3220:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3228:3:3",
														"nodeType": "YulTypedName",
														"src": "3228:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3236:5:3",
														"nodeType": "YulTypedName",
														"src": "3236:5:3",
														"type": ""
													}
												],
												"src": "3190:139:3"
											},
											{
												"body": {
													"nativeSrc": "3401:263:3",
													"nodeType": "YulBlock",
													"src": "3401:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3447:83:3",
																"nodeType": "YulBlock",
																"src": "3447:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3449:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3449:77:3"
																			},
																			"nativeSrc": "3449:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3449:79:3"
																		},
																		"nativeSrc": "3449:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3449:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3422:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3422:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3431:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3431:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3418:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:3"
																		},
																		"nativeSrc": "3418:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3443:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3443:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3414:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3414:3:3"
																},
																"nativeSrc": "3414:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3414:32:3"
															},
															"nativeSrc": "3411:119:3",
															"nodeType": "YulIf",
															"src": "3411:119:3"
														},
														{
															"nativeSrc": "3540:117:3",
															"nodeType": "YulBlock",
															"src": "3540:117:3",
															"statements": [
																{
																	"nativeSrc": "3555:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3555:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3569:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3569:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3559:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3559:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3584:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3584:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3619:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3619:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3630:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3630:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3615:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3615:3:3"
																				},
																				"nativeSrc": "3615:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3615:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3639:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3639:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3594:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3594:20:3"
																		},
																		"nativeSrc": "3594:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3594:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3584:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3584:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3335:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3371:9:3",
														"nodeType": "YulTypedName",
														"src": "3371:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3382:7:3",
														"nodeType": "YulTypedName",
														"src": "3382:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3394:6:3",
														"nodeType": "YulTypedName",
														"src": "3394:6:3",
														"type": ""
													}
												],
												"src": "3335:329:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Voting.Proposal -> struct Voting.Proposal\n    function abi_encode_t_struct$_Proposal_$202_memory_ptr_to_t_struct$_Proposal_$202_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // description\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // voteCount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Proposal_$202_memory_ptr__to_t_struct$_Proposal_$202_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Proposal_$202_memory_ptr_to_t_struct$_Proposal_$202_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063a7bfab161161006f578063a7bfab1614610105578063ababa4a71461010f578063b647990a14610119578063e47caad314610123578063ee74c6781461012d578063f2fde38b14610137576100a7565b80635edb7e63146100ab578063715018a6146100b55780637776b77a146100bf5780638da5cb5b146100c95780638e7ea5b2146100e7575b5f80fd5b6100b3610153565b005b6100bd61015d565b005b6100c7610170565b005b6100d1610172565b6040516100de919061044e565b60405180910390f35b6100ef610199565b6040516100fc9190610529565b60405180910390f35b61010d6101f1565b005b6101176101fb565b005b610121610205565b005b61012b61020f565b005b610135610219565b005b610151600480360381019061014c9190610577565b610223565b005b61015b6102a7565b565b6101656102a7565b61016e5f61032e565b565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101a16103f6565b60405180604001604052806040518060400160405280601381526020017f70726f706f736974696f6e20646520746573740000000000000000000000000081525081526020016014815250905090565b6101f96102a7565b565b6102036102a7565b565b61020d6102a7565b565b6102176102a7565b565b6102216102a7565b565b61022b6102a7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361029b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610292919061044e565b60405180910390fd5b6102a48161032e565b50565b6102af6103ef565b73ffffffffffffffffffffffffffffffffffffffff166102cd610172565b73ffffffffffffffffffffffffffffffffffffffff161461032c576102f06103ef565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610323919061044e565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b6040518060400160405280606081526020015f81525090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104388261040f565b9050919050565b6104488161042e565b82525050565b5f6020820190506104615f83018461043f565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6104a982610467565b6104b38185610471565b93506104c3818560208601610481565b6104cc8161048f565b840191505092915050565b5f819050919050565b6104e9816104d7565b82525050565b5f604083015f8301518482035f860152610509828261049f565b915050602083015161051e60208601826104e0565b508091505092915050565b5f6020820190508181035f83015261054181846104ef565b905092915050565b5f80fd5b6105568161042e565b8114610560575f80fd5b50565b5f813590506105718161054d565b92915050565b5f6020828403121561058c5761058b610549565b5b5f61059984828501610563565b9150509291505056fea26469706673582212200e1a9feacd496a83cee71017426c5a5a4c77cb43d3a6432c1e8a6fb6ee9cf11664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA7BFAB16 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA7BFAB16 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xABABA4A7 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xB647990A EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xE47CAAD3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xEE74C678 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x137 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x5EDB7E63 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x7776B77A EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB3 PUSH2 0x153 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC7 PUSH2 0x170 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH2 0x20F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x135 PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15B PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x16E PUSH0 PUSH2 0x32E JUMP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x70726F706F736974696F6E206465207465737400000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x14 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x203 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x20D PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x217 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x221 PUSH2 0x2A7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x22B PUSH2 0x2A7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x32E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x3EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CD PUSH2 0x172 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32C JUMPI PUSH2 0x2F0 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x438 DUP3 PUSH2 0x40F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x42E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x461 PUSH0 DUP4 ADD DUP5 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A9 DUP3 PUSH2 0x467 JUMP JUMPDEST PUSH2 0x4B3 DUP2 DUP6 PUSH2 0x471 JUMP JUMPDEST SWAP4 POP PUSH2 0x4C3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x481 JUMP JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0x48F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E9 DUP2 PUSH2 0x4D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x509 DUP3 DUP3 PUSH2 0x49F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x51E PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x4E0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x541 DUP2 DUP5 PUSH2 0x4EF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x556 DUP2 PUSH2 0x42E JUMP JUMPDEST DUP2 EQ PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x571 DUP2 PUSH2 0x54D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x549 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x599 DUP5 DUP3 DUP6 ADD PUSH2 0x563 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE BYTE SWAP16 0xEA 0xCD BLOBHASH PUSH11 0x83CEE71017426C5A5A4C77 0xCB NUMBER 0xD3 0xA6 NUMBER 0x2C 0x1E DUP11 PUSH16 0xB6EE9CF11664736F6C634300081A0033 ",
							"sourceMap": "111:1442:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:56;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1052:43:2;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1341:210:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1228:53;;;:::i;:::-;;936:46;;;:::i;:::-;;1287:48;;;:::i;:::-;;988:58;;;:::i;:::-;;1167:55;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1101:56:2;1531:13:0;:11;:13::i;:::-;1101:56:2:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1052:43:2:-;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1341:210:2:-;1383:15;;:::i;:::-;1482:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:2;1482:62;;;1475:69;;1341:210;:::o;1228:53::-;1531:13:0;:11;:13::i;:::-;1228:53:2:o;936:46::-;1531:13:0;:11;:13::i;:::-;936:46:2:o;1287:48::-;1531:13:0;:11;:13::i;:::-;1287:48:2:o;988:58::-;1531:13:0;:11;:13::i;:::-;988:58:2:o;1167:55::-;1531:13:0;:11;:13::i;:::-;1167:55:2:o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:159::-;772:11;806:6;801:3;794:19;846:4;841:3;837:14;822:29;;698:159;;;;:::o;863:139::-;952:6;947:3;942;936:23;993:1;984:6;979:3;975:16;968:27;863:139;;;:::o;1008:102::-;1049:6;1100:2;1096:7;1091:2;1084:5;1080:14;1076:28;1066:38;;1008:102;;;:::o;1116:357::-;1194:3;1222:39;1255:5;1222:39;:::i;:::-;1277:61;1331:6;1326:3;1277:61;:::i;:::-;1270:68;;1347:65;1405:6;1400:3;1393:4;1386:5;1382:16;1347:65;:::i;:::-;1437:29;1459:6;1437:29;:::i;:::-;1432:3;1428:39;1421:46;;1198:275;1116:357;;;;:::o;1479:77::-;1516:7;1545:5;1534:16;;1479:77;;;:::o;1562:108::-;1639:24;1657:5;1639:24;:::i;:::-;1634:3;1627:37;1562:108;;:::o;1732:618::-;1851:3;1887:4;1882:3;1878:14;1981:4;1974:5;1970:16;1964:23;2034:3;2028:4;2024:14;2017:4;2012:3;2008:14;2001:38;2060:73;2128:4;2114:12;2060:73;:::i;:::-;2052:81;;1902:242;2231:4;2224:5;2220:16;2214:23;2250:63;2307:4;2302:3;2298:14;2284:12;2250:63;:::i;:::-;2154:169;2340:4;2333:11;;1856:494;1732:618;;;;:::o;2356:373::-;2499:4;2537:2;2526:9;2522:18;2514:26;;2586:9;2580:4;2576:20;2572:1;2561:9;2557:17;2550:47;2614:108;2717:4;2708:6;2614:108;:::i;:::-;2606:116;;2356:373;;;;:::o;2816:117::-;2925:1;2922;2915:12;3062:122;3135:24;3153:5;3135:24;:::i;:::-;3128:5;3125:35;3115:63;;3174:1;3171;3164:12;3115:63;3062:122;:::o;3190:139::-;3236:5;3274:6;3261:20;3252:29;;3290:33;3317:5;3290:33;:::i;:::-;3190:139;;;;:::o;3335:329::-;3394:6;3443:2;3431:9;3422:7;3418:23;3414:32;3411:119;;;3449:79;;:::i;:::-;3411:119;3569:1;3594:53;3639:7;3630:6;3619:9;3615:22;3594:53;:::i;:::-;3584:63;;3540:117;3335:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "299200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"authorize()": "infinite",
								"countVotes()": "infinite",
								"endProposalsSession()": "infinite",
								"endVotingSession()": "infinite",
								"getWinner()": "infinite",
								"owner()": "2582",
								"registerProposal()": "188",
								"renounceOwnership()": "infinite",
								"startProposalsSession()": "infinite",
								"startVotingSession()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 1553,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 180,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 180,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 180,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 144,
									"end": 180,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 166,
									"end": 176,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 1553,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e1a9feacd496a83cee71017426c5a5a4c77cb43d3a6432c1e8a6fb6ee9cf11664736f6c634300081a0033",
									".code": [
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "A7BFAB16"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "A7BFAB16"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "ABABA4A7"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "B647990A"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "E47CAAD3"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "EE74C678"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "5EDB7E63"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "7776B77A"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "8E7EA5B2"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 111,
											"end": 1553,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1101,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1341,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1341,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1228,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 936,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 936,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 936,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 936,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 982,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1287,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 988,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1167,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1101,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1383,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "70726F706F736974696F6E206465207465737400000000000000000000000000"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1544,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1228,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1228,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 936,
											"end": 982,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 936,
											"end": 982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 936,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1287,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 988,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1167,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 692,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 593,
											"end": 692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 645,
											"end": 651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 673,
											"end": 685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 663,
											"end": 685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 663,
											"end": 685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 593,
											"end": 692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 593,
											"end": 692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 857,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 698,
											"end": 857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 772,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 794,
											"end": 813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 846,
											"end": 850,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 844,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 837,
											"end": 851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 822,
											"end": 851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 822,
											"end": 851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 857,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 698,
											"end": 857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 698,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 698,
											"end": 857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 863,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 947,
											"end": 950,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 942,
											"end": 945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 936,
											"end": 959,
											"name": "MCOPY",
											"source": 3
										},
										{
											"begin": 993,
											"end": 994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 990,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 979,
											"end": 982,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 975,
											"end": 991,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 968,
											"end": 995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1110,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1008,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1096,
											"end": 1103,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1084,
											"end": 1089,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1104,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1066,
											"end": 1104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1110,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1473,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1116,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1255,
											"end": 1260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1222,
											"end": 1261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1261,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1222,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1329,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1277,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1338,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1277,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 1338,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 1338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1403,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1382,
											"end": 1398,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1347,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1347,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1437,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1467,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1198,
											"end": 1473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1473,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1556,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1479,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1516,
											"end": 1523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1534,
											"end": 1550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1556,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1670,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1562,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1657,
											"end": 1662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1639,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1639,
											"end": 1663,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1639,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1634,
											"end": 1637,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1562,
											"end": 1670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 2350,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1732,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1878,
											"end": 1892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 1985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 1986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2037,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2015,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2128,
											"end": 2132,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2060,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2052,
											"end": 2133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2052,
											"end": 2133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1902,
											"end": 2144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2237,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2307,
											"end": 2311,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2302,
											"end": 2305,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2250,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2313,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2250,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2340,
											"end": 2344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2333,
											"end": 2344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1856,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 2350,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 2350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1732,
											"end": 2350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2729,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2356,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2526,
											"end": 2535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 2596,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2717,
											"end": 2721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2614,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2722,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2614,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2722,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2722,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2729,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2356,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2816,
											"end": 2933,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2816,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2927,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3184,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3062,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3153,
											"end": 3158,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3135,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3135,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3160,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3176,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3115,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3329,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3190,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3281,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3252,
											"end": 3281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3290,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3323,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3290,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3329,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3664,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3335,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3445,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3431,
											"end": 3440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3422,
											"end": 3429,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3441,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3414,
											"end": 3446,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3530,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3411,
											"end": 3530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3449,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3449,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3411,
											"end": 3530,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3411,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3569,
											"end": 3570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3639,
											"end": 3646,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3594,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3594,
											"end": 3647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3594,
											"end": 3647,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3594,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3540,
											"end": 3657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3664,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Voting/Voting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authorize()": "ababa4a7",
							"countVotes()": "b647990a",
							"endProposalsSession()": "5edb7e63",
							"endVotingSession()": "a7bfab16",
							"getWinner()": "8e7ea5b2",
							"owner()": "8da5cb5b",
							"registerProposal()": "7776b77a",
							"renounceOwnership()": "715018a6",
							"startProposalsSession()": "e47caad3",
							"startVotingSession()": "ee74c678",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"countVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endProposalsSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startProposalsSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting/Voting.sol\":\"Voting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Voting/Voting.sol\":{\"keccak256\":\"0xaf8cbb6d91407071a3b33c22f0de21047165fa6102fd0bbeec647865fefad2f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d87d594ae0b5b4dbcbf6ae1a8cd255a5591357bd3d200e47387bab74001ce3a4\",\"dweb:/ipfs/QmRX7beiiozMQdKBYyj9x8NZJDb7PtEEASaGrh4UwjXGsM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Voting/Voting.sol:Voting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 211,
								"contract": "contracts/Voting/Voting.sol:Voting",
								"label": "winningProposalId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "contracts/Voting/Voting.sol:Voting",
								"label": "whitelist",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/Voting/Voting.sol": {
				"ast": {
					"absolutePath": "contracts/Voting/Voting.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						],
						"Voting": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 291,
							"sourceUnit": 148,
							"src": "57:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"130:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "130:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "130:7:2"
								}
							],
							"canonicalName": "Voting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 290,
							"linearizedBaseContracts": [
								290,
								147,
								177
							],
							"name": "Voting",
							"nameLocation": "120:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "178:2:2",
										"statements": []
									},
									"id": 190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 185,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "166:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "170:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "166:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 187,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 184,
												"name": "Ownable",
												"nameLocations": [
													"158:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "158:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "158:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:2:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:0:2"
									},
									"scope": 290,
									"src": "144:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.Voter",
									"id": 197,
									"members": [
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "isRegistered",
											"nameLocation": "214:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 197,
											"src": "209:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 191,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "209:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "hasVoted",
											"nameLocation": "241:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 197,
											"src": "236:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 193,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "236:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "votedProposalId",
											"nameLocation": "267:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 197,
											"src": "259:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "259:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "193:5:2",
									"nodeType": "StructDefinition",
									"scope": 290,
									"src": "186:103:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.Proposal",
									"id": 202,
									"members": [
										{
											"constant": false,
											"id": 199,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "328:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 202,
											"src": "321:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 198,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "321:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "357:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 202,
											"src": "349:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "349:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "302:8:2",
									"nodeType": "StructDefinition",
									"scope": 290,
									"src": "295:78:2",
									"visibility": "public"
								},
								{
									"canonicalName": "Voting.WorkflowStatus",
									"id": 209,
									"members": [
										{
											"id": 203,
											"name": "RegisteringVoters",
											"nameLocation": "409:17:2",
											"nodeType": "EnumValue",
											"src": "409:17:2"
										},
										{
											"id": 204,
											"name": "ProposalsRegistrationStarted",
											"nameLocation": "436:28:2",
											"nodeType": "EnumValue",
											"src": "436:28:2"
										},
										{
											"id": 205,
											"name": "ProposalsRegistrationEnded",
											"nameLocation": "474:26:2",
											"nodeType": "EnumValue",
											"src": "474:26:2"
										},
										{
											"id": 206,
											"name": "VotingSessionStarted",
											"nameLocation": "510:20:2",
											"nodeType": "EnumValue",
											"src": "510:20:2"
										},
										{
											"id": 207,
											"name": "VotingSessionEnded",
											"nameLocation": "540:18:2",
											"nodeType": "EnumValue",
											"src": "540:18:2"
										},
										{
											"id": 208,
											"name": "VotesTallied",
											"nameLocation": "568:12:2",
											"nodeType": "EnumValue",
											"src": "568:12:2"
										}
									],
									"name": "WorkflowStatus",
									"nameLocation": "384:14:2",
									"nodeType": "EnumDefinition",
									"src": "379:207:2"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "winningProposalId",
									"nameLocation": "608:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "592:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "592:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "657:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 290,
									"src": "632:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 214,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "640:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "632:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 213,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "651:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "b6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd",
									"id": 219,
									"name": "VoterRegistered",
									"nameLocation": "679:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "voterAddress",
												"nameLocation": "703:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "695:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:22:2"
									},
									"src": "673:44:2"
								},
								{
									"anonymous": false,
									"eventSelector": "0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f",
									"id": 227,
									"name": "WorkflowStatusChange",
									"nameLocation": "728:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousStatus",
												"nameLocation": "773:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "758:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$209",
													"typeString": "enum Voting.WorkflowStatus"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "WorkflowStatus",
														"nameLocations": [
															"758:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "758:14:2"
													},
													"referencedDeclaration": 209,
													"src": "758:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$209",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStatus",
												"nameLocation": "812:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$209",
													"typeString": "enum Voting.WorkflowStatus"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "WorkflowStatus",
														"nameLocations": [
															"797:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 209,
														"src": "797:14:2"
													},
													"referencedDeclaration": 209,
													"src": "797:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$209",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:79:2"
									},
									"src": "722:106:2"
								},
								{
									"anonymous": false,
									"eventSelector": "92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f",
									"id": 231,
									"name": "ProposalRegistered",
									"nameLocation": "839:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "866:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "858:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:20:2"
									},
									"src": "833:45:2"
								},
								{
									"anonymous": false,
									"eventSelector": "4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca4",
									"id": 237,
									"name": "Voted",
									"nameLocation": "889:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "903:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "895:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": false,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "918:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "910:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:35:2"
									},
									"src": "883:47:2"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "974:8:2",
										"statements": []
									},
									"functionSelector": "ababa4a7",
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 240,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 239,
												"name": "onlyOwner",
												"nameLocations": [
													"964:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "964:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "964:9:2"
										}
									],
									"name": "authorize",
									"nameLocation": "945:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:0:2"
									},
									"scope": 290,
									"src": "936:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "1038:8:2",
										"statements": []
									},
									"functionSelector": "e47caad3",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 245,
												"name": "onlyOwner",
												"nameLocations": [
													"1028:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1028:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1028:9:2"
										}
									],
									"name": "startProposalsSession",
									"nameLocation": "997:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:2:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:2"
									},
									"scope": 290,
									"src": "988:58:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1087:8:2",
										"statements": []
									},
									"functionSelector": "7776b77a",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerProposal",
									"nameLocation": "1061:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:2"
									},
									"scope": 290,
									"src": "1052:43:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1149:8:2",
										"statements": []
									},
									"functionSelector": "5edb7e63",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 255,
												"name": "onlyOwner",
												"nameLocations": [
													"1139:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1139:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1139:9:2"
										}
									],
									"name": "endProposalsSession",
									"nameLocation": "1110:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1129:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:0:2"
									},
									"scope": 290,
									"src": "1101:56:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1214:8:2",
										"statements": []
									},
									"functionSelector": "ee74c678",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 261,
												"name": "onlyOwner",
												"nameLocations": [
													"1204:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1204:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1204:9:2"
										}
									],
									"name": "startVotingSession",
									"nameLocation": "1176:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1194:2:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1214:0:2"
									},
									"scope": 290,
									"src": "1167:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "1273:8:2",
										"statements": []
									},
									"functionSelector": "a7bfab16",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 267,
												"name": "onlyOwner",
												"nameLocations": [
													"1263:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1263:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1263:9:2"
										}
									],
									"name": "endVotingSession",
									"nameLocation": "1237:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:2:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1273:0:2"
									},
									"scope": 290,
									"src": "1228:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1327:8:2",
										"statements": []
									},
									"functionSelector": "b647990a",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 274,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 273,
												"name": "onlyOwner",
												"nameLocations": [
													"1317:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1317:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1317:9:2"
										}
									],
									"name": "countVotes",
									"nameLocation": "1296:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:2"
									},
									"scope": 290,
									"src": "1287:48:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1400:151:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "70726f706f736974696f6e2064652074657374",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1506:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7b65f65af81fbb2bf3bfcd53994bfa9ff6eb6cd548bdffca76688638e0d0c5a",
																"typeString": "literal_string \"proposition de test\""
															},
															"value": "proposition de test"
														},
														{
															"hexValue": "3230",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1540:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f7b65f65af81fbb2bf3bfcd53994bfa9ff6eb6cd548bdffca76688638e0d0c5a",
																"typeString": "literal_string \"proposition de test\""
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 283,
														"name": "Proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "1482:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Proposal_$202_storage_ptr_$",
															"typeString": "type(struct Voting.Proposal storage pointer)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1492:11:2",
														"1529:9:2"
													],
													"names": [
														"description",
														"voteCount"
													],
													"nodeType": "FunctionCall",
													"src": "1482:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$202_memory_ptr",
														"typeString": "struct Voting.Proposal memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 287,
												"nodeType": "Return",
												"src": "1475:69:2"
											}
										]
									},
									"functionSelector": "8e7ea5b2",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWinner",
									"nameLocation": "1350:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1359:2:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1383:15:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Proposal_$202_memory_ptr",
													"typeString": "struct Voting.Proposal"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "Proposal",
														"nameLocations": [
															"1383:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 202,
														"src": "1383:8:2"
													},
													"referencedDeclaration": 202,
													"src": "1383:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$202_storage_ptr",
														"typeString": "struct Voting.Proposal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:17:2"
									},
									"scope": 290,
									"src": "1341:210:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 291,
							"src": "111:1442:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								219,
								227,
								231,
								237
							]
						}
					],
					"src": "32:1522:2"
				},
				"id": 2
			}
		}
	}
}